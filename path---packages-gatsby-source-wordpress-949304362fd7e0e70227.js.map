{"version":3,"sources":["webpack:///path---packages-gatsby-source-wordpress-949304362fd7e0e70227.js","webpack:///./.cache/json/packages-gatsby-source-wordpress.json"],"names":["webpackJsonp","739","module","exports","data","markdownRemark","html","excerpt","timeToRead","fields","title","parent","__typename","relativePath","pathContext","slug"],"mappings":"AAAAA,cAAc,iBAERC,IACA,SAAUC,EAAQC,GCHxBD,EAAAC,SAAkBC,MAAQC,gBAAkBC,KAAA;AAAi3/CC,QAAA,+IAAAC,WAAA,EAAAC,QAAwNC,MAAA,2BAAkCC,QAAWC,WAAA,OAAAC,aAAA,uCAAyEC,aAAgBC,KAAA","file":"path---packages-gatsby-source-wordpress-949304362fd7e0e70227.js","sourcesContent":["webpackJsonp([119048139915454],{\n\n/***/ 739:\n/***/ (function(module, exports) {\n\n\tmodule.exports = {\"data\":{\"markdownRemark\":{\"html\":\"<h1 id=\\\"gatsby-source-wordpress\\\"><a href=\\\"#gatsby-source-wordpress\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>gatsby-source-wordpress</h1>\\n<p>Source plugin for pulling data into <a href=\\\"https://github.com/gatsbyjs\\\">Gatsby</a> from\\nWordPress sites using the\\n<a href=\\\"https://developer.wordpress.org/rest-api/reference/\\\">WordPress JSON REST API</a>.</p>\\n<p>An example site for this plugin is available.</p>\\n<ul>\\n<li><a href=\\\"https://using-wordpress.gatsbyjs.org/\\\">Demo</a></li>\\n<li><a href=\\\"https://github.com/gatsbyjs/gatsby/tree/master/examples/using-wordpress\\\">Example site source code</a></li>\\n</ul>\\n<h2 id=\\\"features\\\"><a href=\\\"#features\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>Features</h2>\\n<ul>\\n<li>Pulls data from self-hosted WordPress sites, hosted on wordpress.com or\\nwordpress.org</li>\\n<li>Should work with any number of article and post (tested on a site with 900\\nposts)</li>\\n<li>Can authenticate to wordpress.com’s API using OAuth 2 so media can be queried</li>\\n<li>Easily create responsive images in Gatsby from WordPress images. See <a href=\\\"#image-processing\\\">image\\nprocessing</a> section.</li>\\n</ul>\\n<h2 id=\\\"wordpress-and-custom-entities\\\"><a href=\\\"#wordpress-and-custom-entities\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>WordPress and custom entities</h2>\\n<p>This module currently pulls from WordPress the following entities:</p>\\n<ul>\\n<li class=\\\"task-list-item\\\"><input type=\\\"checkbox\\\" checked disabled> All entities are supported (posts, pages, tags, categories, media, types,\\nusers, statuses, taxonomies, …)</li>\\n<li class=\\\"task-list-item\\\"><input type=\\\"checkbox\\\" checked disabled> Any new entity should be pulled as long the IDs are correct.</li>\\n<li class=\\\"task-list-item\\\"><input type=\\\"checkbox\\\" checked disabled> <a href=\\\"https://www.advancedcustomfields.com/\\\">ACF Entities (Advanced Custom Fields)</a></li>\\n<li class=\\\"task-list-item\\\"><input type=\\\"checkbox\\\" checked disabled> Custom post types (any type you could have declared using WordPress’\\n<code>functions.php</code>)</li>\\n</ul>\\n<p>We welcome PRs adding support for data from other plugins.</p>\\n<h2 id=\\\"install\\\"><a href=\\\"#install\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>Install</h2>\\n<p><code>npm install --save gatsby-source-wordpress</code></p>\\n<h2 id=\\\"how-to-use\\\"><a href=\\\"#how-to-use\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>How to use</h2>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-javascript\\\"><code><span class=\\\"token comment\\\">// In your gatsby-config.js</span>\\nplugins<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token punctuation\\\">[</span>\\n  <span class=\\\"token comment\\\">/*\\n     * Gatsby's data processing layer begins with “source”\\n     * plugins. Here the site sources its data from Wordpress.\\n     */</span>\\n  <span class=\\\"token punctuation\\\">{</span>\\n    resolve<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">\\\"gatsby-source-wordpress\\\"</span><span class=\\\"token punctuation\\\">,</span>\\n    options<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token punctuation\\\">{</span>\\n      <span class=\\\"token comment\\\">/*\\n        * The base URL of the Wordpress site without the trailingslash and the protocol. This is required.\\n        * Example : 'gatsbyjsexamplewordpress.wordpress.com' or 'www.example-site.com'\\n        */</span>\\n      baseUrl<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">\\\"gatsbyjsexamplewordpress.wordpress.com\\\"</span><span class=\\\"token punctuation\\\">,</span>\\n      <span class=\\\"token comment\\\">// The protocol. This can be http or https.</span>\\n      protocol<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">\\\"http\\\"</span><span class=\\\"token punctuation\\\">,</span>\\n      <span class=\\\"token comment\\\">// Indicates whether the site is hosted on wordpress.com.</span>\\n      <span class=\\\"token comment\\\">// If false, then the asumption is made that the site is self hosted.</span>\\n      <span class=\\\"token comment\\\">// If true, then the plugin will source its content on wordpress.com using the JSON REST API V2.</span>\\n      <span class=\\\"token comment\\\">// If your site is hosted on wordpress.org, then set this to false.</span>\\n      hostingWPCOM<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token boolean\\\">true</span><span class=\\\"token punctuation\\\">,</span>\\n      <span class=\\\"token comment\\\">// If useACF is true, then the source plugin will try to import the Wordpress ACF Plugin contents.</span>\\n      <span class=\\\"token comment\\\">// This feature is untested for sites hosted on Wordpress.com.</span>\\n      <span class=\\\"token comment\\\">// Defaults to true.</span>\\n      useACF<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token boolean\\\">true</span><span class=\\\"token punctuation\\\">,</span>\\n      auth<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token punctuation\\\">{</span>\\n        <span class=\\\"token comment\\\">// If auth.user and auth.pass are filled, then the source plugin will be allowed</span>\\n        <span class=\\\"token comment\\\">// to access endpoints that are protected with .htaccess.</span>\\n        htaccess_user<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">\\\"your-htaccess-username\\\"</span><span class=\\\"token punctuation\\\">,</span>\\n        htaccess_pass<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">\\\"your-htaccess-password\\\"</span><span class=\\\"token punctuation\\\">,</span>\\n        htaccess_sendImmediately<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token boolean\\\">false</span><span class=\\\"token punctuation\\\">,</span>\\n\\n        <span class=\\\"token comment\\\">// If hostingWPCOM is true then you will need to communicate with wordpress.com API</span>\\n        <span class=\\\"token comment\\\">// in order to do that you need to create an app (of type Web) at https://developer.wordpress.com/apps/</span>\\n        <span class=\\\"token comment\\\">// then add your clientId, clientSecret, username, and password here</span>\\n        wpcom_app_clientSecret<span class=\\\"token punctuation\\\">:</span>\\n          <span class=\\\"token string\\\">\\\"NMPnXYFtj2gKas7V1kZyMxr7oLry9V5ZxIyBQGu2txjVHg0GhFz6RYcKopkHICYg\\\"</span><span class=\\\"token punctuation\\\">,</span>\\n        wpcom_app_clientId<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">\\\"54793\\\"</span><span class=\\\"token punctuation\\\">,</span>\\n        wpcom_user<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">\\\"gatsbyjswpexample@gmail.com\\\"</span><span class=\\\"token punctuation\\\">,</span>\\n        wpcom_pass<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">\\\"very-secured-password\\\"</span><span class=\\\"token punctuation\\\">,</span>\\n      <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span>\\n      <span class=\\\"token comment\\\">// Set verboseOutput to true to display a verbose output on `npm run develop` or `npm run build`</span>\\n      <span class=\\\"token comment\\\">// It can help you debug specific API Endpoints problems</span>\\n      verboseOutput<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token boolean\\\">false</span><span class=\\\"token punctuation\\\">,</span>\\n    <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span>\\n  <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span>\\n<span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">;</span>\\n</code></pre>\\n      </div>\\n<h2 id=\\\"wordpress-plugins\\\"><a href=\\\"#wordpress-plugins\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>WordPress Plugins</h2>\\n<p>These plugins were tested. We welcome PRs adding support for data from other\\nplugins.</p>\\n<ul>\\n<li class=\\\"task-list-item\\\">\\n<p><input type=\\\"checkbox\\\" checked disabled> Custom Post Types : it will work seemlessly, no further option needs to be\\nactivated. (“Show in REST API” setting needs to be set to true on the\\ncustom post in the plugin settings for this to work. It’s set to “false”\\nby default.)</p>\\n</li>\\n<li class=\\\"task-list-item\\\">\\n<p><input type=\\\"checkbox\\\" checked disabled> <a href=\\\"https://www.advancedcustomfields.com/\\\">ACF</a> The option <code>useACF: true</code>\\nmust be activated in your site’s <code>gatsby-config.js</code>.</p>\\n<ul>\\n<li>You must have the plugin\\n<a href=\\\"https://github.com/airesvsg/acf-to-rest-api\\\">acf-to-rest-api</a> installed in\\nWordPress.</li>\\n<li>Will pull the <code>acf: { ... }</code> fields’s contents from any entity which has it\\nattached (pages, posts, medias, … you choose from in WordPress back-end\\nwhile creating a Group of Fields).</li>\\n<li><a href=\\\"https://www.advancedcustomfields.com/pro/\\\">ACF Pro</a> same as ACF :</li>\\n<li>Will work with\\n<a href=\\\"https://www.advancedcustomfields.com/resources/flexible-content/\\\">Flexible content</a>\\nand premium stuff like that (repeater, gallery, …).</li>\\n<li>Will pull the content attached to the\\n<a href=\\\"https://www.advancedcustomfields.com/add-ons/options-page/\\\">options page</a>.</li>\\n</ul>\\n</li>\\n<li class=\\\"task-list-item\\\">\\n<p><input type=\\\"checkbox\\\" checked disabled> <a href=\\\"https://wordpress.org/plugins/wp-api-menus/\\\">WP-API-MENUS</a> which gives\\nyou the menus and menu locations endpoint.</p>\\n</li>\\n<li class=\\\"task-list-item\\\">\\n<p><input type=\\\"checkbox\\\" checked disabled> <a href=\\\"https://github.com/shawnhooper/wpml-rest-api\\\">WPML-REST-API</a> which adds\\nthe current locale and available translations to all post types.</p>\\n</li>\\n</ul>\\n<h2 id=\\\"how-to-use-gatsby-with-wordpresscom-hosting\\\"><a href=\\\"#how-to-use-gatsby-with-wordpresscom-hosting\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>How to use Gatsby with Wordpress.com hosting</h2>\\n<p>Set <code>hostingWPCOM: true</code>.</p>\\n<p>You will need to provide an (API\\nKey)[https://en.support.wordpress.com/api-keys/].</p>\\n<p>Note : you don’t need this for Wordpress.org hosting in which your WordPress\\nwill behave like a self-hosted instance.</p>\\n<h2 id=\\\"how-to-query\\\"><a href=\\\"#how-to-query\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>How to query</h2>\\n<p>You can query nodes created from Wordpress using GraphQL like the following:\\nNote : Learn to use the GraphQL tool and Ctrl+Spacebar at\\n<a href=\\\"http://localhost:3000/___graphiql\\\">http://localhost:3000/___graphiql</a> to discover the types and properties of your\\nGraphQL model.</p>\\n<h3 id=\\\"query-posts\\\"><a href=\\\"#query-posts\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>Query posts</h3>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-graphql\\\"><code>  allWordpressPost <span class=\\\"token punctuation\\\">{</span>\\n    edges <span class=\\\"token punctuation\\\">{</span>\\n      node <span class=\\\"token punctuation\\\">{</span>\\n        id\\n        slug\\n        title\\n        content\\n        excerpt\\n        date\\n        modified\\n      <span class=\\\"token punctuation\\\">}</span>\\n    <span class=\\\"token punctuation\\\">}</span>\\n  <span class=\\\"token punctuation\\\">}</span>\\n</code></pre>\\n      </div>\\n<h3 id=\\\"query-pages\\\"><a href=\\\"#query-pages\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>Query pages</h3>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-graphql\\\"><code>  allWordpressPage <span class=\\\"token punctuation\\\">{</span>\\n    edges <span class=\\\"token punctuation\\\">{</span>\\n      node <span class=\\\"token punctuation\\\">{</span>\\n        id\\n        title\\n        content\\n        excerpt\\n        date\\n        modified\\n        slug\\n        status\\n      <span class=\\\"token punctuation\\\">}</span>\\n    <span class=\\\"token punctuation\\\">}</span>\\n  <span class=\\\"token punctuation\\\">}</span>\\n</code></pre>\\n      </div>\\n<p>Same thing for other type of entity (tag, media, categories, …).</p>\\n<h3 id=\\\"query-any-other-entity\\\"><a href=\\\"#query-any-other-entity\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>Query any other entity</h3>\\n<p>In the following example, <code>${Manufacturer}</code> will be replaced by the endpoint\\nprefix and <code>${Endpoint}</code> by the name of the endpoint.</p>\\n<p>To know what’s what, check the URL of the endpoint. You can set <code>verboseOutput: true</code> in order to get more information of what’s executed by the source plugin\\nbehind the scene.</p>\\n<p>For example the following URL:\\n<code>http://my-blog.wordpress.com/wp-json/acf/v2/options</code></p>\\n<ul>\\n<li>Manufacturer : <code>acf</code></li>\\n<li>Endpoint : <code>options</code></li>\\n<li>Final GraphQL Type : AllWordpressAcfOptions</li>\\n</ul>\\n<p>For example the following URL:\\n<code>http://my-blog.wordpress.com/wp-api-menus/v2/menu-locations</code></p>\\n<ul>\\n<li>Manufacturer : <code>wpapimenus</code></li>\\n<li>Endpoint : <code>menulocations</code></li>\\n<li>Final GraphQL Type : AllWordpressWpApiMenusMenuLocations</li>\\n</ul>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-graphql\\\"><code>  allWordpress$<span class=\\\"token punctuation\\\">{</span>Manufacturer<span class=\\\"token punctuation\\\">}</span>$<span class=\\\"token punctuation\\\">{</span>Endpoint<span class=\\\"token punctuation\\\">}</span> <span class=\\\"token punctuation\\\">{</span>\\n    edges <span class=\\\"token punctuation\\\">{</span>\\n      node <span class=\\\"token punctuation\\\">{</span>\\n        id\\n       type\\n        // Put your fields here\\n      <span class=\\\"token punctuation\\\">}</span>\\n    <span class=\\\"token punctuation\\\">}</span>\\n  <span class=\\\"token punctuation\\\">}</span>\\n</code></pre>\\n      </div>\\n<h3 id=\\\"query-posts-with-the-child-acf-fields-node\\\"><a href=\\\"#query-posts-with-the-child-acf-fields-node\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>Query posts with the child ACF Fields Node</h3>\\n<p>Mention the apparition of <code>childWordpressAcfField</code> in the query below :</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-graphql\\\"><code>  allWordpressPost <span class=\\\"token punctuation\\\">{</span>\\n    edges <span class=\\\"token punctuation\\\">{</span>\\n      node <span class=\\\"token punctuation\\\">{</span>\\n        id\\n        slug\\n        title\\n        content\\n        excerpt\\n        date\\n        modified\\n        author\\n        featured_media\\n        template\\n        categories\\n        tags\\n        acf <span class=\\\"token punctuation\\\">{</span>\\n         // use ___GraphiQL debugger and Ctrl+Spacebar to describe your model.\\n        <span class=\\\"token punctuation\\\">}</span>\\n      <span class=\\\"token punctuation\\\">}</span>\\n    <span class=\\\"token punctuation\\\">}</span>\\n  <span class=\\\"token punctuation\\\">}</span>\\n</code></pre>\\n      </div>\\n<h3 id=\\\"query-pages-with-the-child-acf-fields-node\\\"><a href=\\\"#query-pages-with-the-child-acf-fields-node\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>Query pages with the child ACF Fields Node</h3>\\n<p>Mention the apparition of <code>childWordpressAcfField</code> in the query below :</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-graphql\\\"><code>  allWordpressPage <span class=\\\"token punctuation\\\">{</span>\\n    edges <span class=\\\"token punctuation\\\">{</span>\\n      node <span class=\\\"token punctuation\\\">{</span>\\n        id\\n        title\\n        content\\n        excerpt\\n        date\\n        modified\\n        slug\\n        author\\n        featured_media\\n        template\\n        acf <span class=\\\"token punctuation\\\">{</span>\\n         // use ___GraphiQL debugger and Ctrl+Spacebar to describe your model.\\n        <span class=\\\"token punctuation\\\">}</span>\\n      <span class=\\\"token punctuation\\\">}</span>\\n    <span class=\\\"token punctuation\\\">}</span>\\n  <span class=\\\"token punctuation\\\">}</span>\\n</code></pre>\\n      </div>\\n<h3 id=\\\"query-with-acf-flexible-content\\\"><a href=\\\"#query-with-acf-flexible-content\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>Query with ACF Flexible Content</h3>\\n<p>ACF Flexible Content returns an array of objects with different types and are\\nhandled differently than other fields.</p>\\n<p>To access those fields, instead of using their field name, you need to use\\n<code>[field_name]_[post_type]</code> (if you have field named <code>page_builder</code> in\\nyour WordPress pages you would need to use <code>page_builder_page</code>).</p>\\n<p>To access data stored in these fields, you need to use GraphQL\\n<a href=\\\"http://graphql.org/learn/queries/#inline-fragments\\\">inline fragments</a>. This\\nrequire you to know types of nodes. The easiest way to get the types of nodes is to use\\n<code>___GraphiQL</code> debugger and run the below query (adjust post type and field name):</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-graphql\\\"><code>  allWordpressPage <span class=\\\"token punctuation\\\">{</span>\\n    edges <span class=\\\"token punctuation\\\">{</span>\\n      node <span class=\\\"token punctuation\\\">{</span>\\n        title\\n        acf <span class=\\\"token punctuation\\\">{</span>\\n          page_builder_page <span class=\\\"token punctuation\\\">{</span>\\n            __typename\\n          <span class=\\\"token punctuation\\\">}</span>\\n        <span class=\\\"token punctuation\\\">}</span>\\n      <span class=\\\"token punctuation\\\">}</span>\\n    <span class=\\\"token punctuation\\\">}</span>\\n  <span class=\\\"token punctuation\\\">}</span>\\n</code></pre>\\n      </div>\\n<p>When you have node type names, you can use them to create inline fragments.</p>\\n<p>Full example:</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-graphql\\\"><code>  allWordpressPage <span class=\\\"token punctuation\\\">{</span>\\n    edges <span class=\\\"token punctuation\\\">{</span>\\n      node <span class=\\\"token punctuation\\\">{</span>\\n        title\\n        acf <span class=\\\"token punctuation\\\">{</span>\\n          page_builder_page <span class=\\\"token punctuation\\\">{</span>\\n            __typename\\n            <span class=\\\"token operator\\\">...</span> <span class=\\\"token keyword\\\">on</span> WordPressAcf_hero <span class=\\\"token punctuation\\\">{</span>\\n              title\\n              subtitle\\n            <span class=\\\"token punctuation\\\">}</span>\\n            <span class=\\\"token operator\\\">...</span> <span class=\\\"token keyword\\\">on</span> WordpressAcf_text <span class=\\\"token punctuation\\\">{</span>\\n              text\\n            <span class=\\\"token punctuation\\\">}</span>\\n            <span class=\\\"token operator\\\">...</span> <span class=\\\"token keyword\\\">on</span> WordpressAcf_image <span class=\\\"token punctuation\\\">{</span>\\n              image <span class=\\\"token punctuation\\\">{</span>\\n                localFile <span class=\\\"token punctuation\\\">{</span>\\n                  childImageSharp <span class=\\\"token punctuation\\\">{</span>\\n                    sizes<span class=\\\"token punctuation\\\">(</span><span class=\\\"token attr-name\\\">maxWidth</span><span class=\\\"token punctuation\\\">:</span> <span class=\\\"token number\\\">800</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n                      <span class=\\\"token operator\\\">...</span>GatsbyImageSharpSizes_withWebp\\n                    <span class=\\\"token punctuation\\\">}</span>\\n                  <span class=\\\"token punctuation\\\">}</span>\\n                <span class=\\\"token punctuation\\\">}</span>\\n              <span class=\\\"token punctuation\\\">}</span>\\n            <span class=\\\"token punctuation\\\">}</span>\\n          <span class=\\\"token punctuation\\\">}</span>\\n        <span class=\\\"token punctuation\\\">}</span>\\n      <span class=\\\"token punctuation\\\">}</span>\\n    <span class=\\\"token punctuation\\\">}</span>\\n  <span class=\\\"token punctuation\\\">}</span>\\n</code></pre>\\n      </div>\\n<h3 id=\\\"query-posts-with-the-wpml-fields-node\\\"><a href=\\\"#query-posts-with-the-wpml-fields-node\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>Query posts with the WPML Fields Node</h3>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-graphql\\\"><code>  allWordpressPost <span class=\\\"token punctuation\\\">{</span>\\n    edges <span class=\\\"token punctuation\\\">{</span>\\n      node <span class=\\\"token punctuation\\\">{</span>\\n        id\\n        slug\\n        title\\n        content\\n        excerpt\\n        date\\n        modified\\n        author\\n        featured_media\\n        template\\n        categories\\n        tags\\n        wpml_current_locale\\n        wpml_translations <span class=\\\"token punctuation\\\">{</span>\\n          locale\\n          wordpress_id\\n          post_title\\n          href\\n        <span class=\\\"token punctuation\\\">}</span>\\n      <span class=\\\"token punctuation\\\">}</span>\\n    <span class=\\\"token punctuation\\\">}</span>\\n  <span class=\\\"token punctuation\\\">}</span>\\n</code></pre>\\n      </div>\\n<h3 id=\\\"query-pages-with-the-wpml-fields-node\\\"><a href=\\\"#query-pages-with-the-wpml-fields-node\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>Query pages with the WPML Fields Node</h3>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-graphql\\\"><code>  allWordpressPage <span class=\\\"token punctuation\\\">{</span>\\n    edges <span class=\\\"token punctuation\\\">{</span>\\n      node <span class=\\\"token punctuation\\\">{</span>\\n        id\\n        title\\n        content\\n        excerpt\\n        date\\n        modified\\n        slug\\n        author\\n        featured_media\\n        template\\n        wpml_current_locale\\n        wpml_translations <span class=\\\"token punctuation\\\">{</span>\\n          locale\\n          wordpress_id\\n          post_title\\n          href\\n        <span class=\\\"token punctuation\\\">}</span>\\n      <span class=\\\"token punctuation\\\">}</span>\\n    <span class=\\\"token punctuation\\\">}</span>\\n  <span class=\\\"token punctuation\\\">}</span>\\n</code></pre>\\n      </div>\\n<h3 id=\\\"image-processing\\\"><a href=\\\"#image-processing\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>Image processing</h3>\\n<p>To use image processing you need <code>gatsby-transformer-sharp</code> and\\n<code>gatsby-plugin-sharp</code> in your <code>gatsby-config.js</code>.</p>\\n<p>You can apply image processing to:</p>\\n<ul>\\n<li>featured images (also known as post thumbnails),</li>\\n<li>\\n<p>ACF fields:</p>\\n<ul>\\n<li>Image field type (return value must be set to <code>Image Object</code> or <code>Image URL</code> or field name must be <code>featured_media</code>),</li>\\n<li>Gallery field type.</li>\\n</ul>\\n</li>\\n</ul>\\n<p>Image processing of inline images added in wordpress WYSIWIG editor is\\ncurrently not supported.</p>\\n<p>To access image processing in your queries you need to use this pattern:</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-none\\\"><code>imageFieldName {\\n  localFile {\\n    childImageSharp {\\n      ...\\n    }\\n  }\\n}</code></pre>\\n      </div>\\n<p>Full example:</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-graphql\\\"><code>  allWordpressPost <span class=\\\"token punctuation\\\">{</span>\\n    edges <span class=\\\"token punctuation\\\">{</span>\\n      node <span class=\\\"token punctuation\\\">{</span>\\n        title\\n        featured_media <span class=\\\"token punctuation\\\">{</span>\\n          localFile <span class=\\\"token punctuation\\\">{</span>\\n            childImageSharp <span class=\\\"token punctuation\\\">{</span>\\n              resolutions<span class=\\\"token punctuation\\\">(</span><span class=\\\"token attr-name\\\">width</span><span class=\\\"token punctuation\\\">:</span> <span class=\\\"token number\\\">500</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token attr-name\\\">height</span><span class=\\\"token punctuation\\\">:</span> <span class=\\\"token number\\\">300</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n                <span class=\\\"token operator\\\">...</span>GatsbyImageSharpResolutions_withWebp\\n              <span class=\\\"token punctuation\\\">}</span>\\n            <span class=\\\"token punctuation\\\">}</span>\\n          <span class=\\\"token punctuation\\\">}</span>\\n        <span class=\\\"token punctuation\\\">}</span>\\n        acf <span class=\\\"token punctuation\\\">{</span>\\n          image <span class=\\\"token punctuation\\\">{</span>\\n            localFile <span class=\\\"token punctuation\\\">{</span>\\n              childImageSharp <span class=\\\"token punctuation\\\">{</span>\\n                sizes<span class=\\\"token punctuation\\\">(</span><span class=\\\"token attr-name\\\">maxWidth</span><span class=\\\"token punctuation\\\">:</span> <span class=\\\"token number\\\">500</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n                  <span class=\\\"token operator\\\">...</span>GatsbyImageSharpSizes_withWebp\\n                <span class=\\\"token punctuation\\\">}</span>\\n              <span class=\\\"token punctuation\\\">}</span>\\n            <span class=\\\"token punctuation\\\">}</span>\\n          <span class=\\\"token punctuation\\\">}</span>\\n          gallery <span class=\\\"token punctuation\\\">{</span>\\n            localFile <span class=\\\"token punctuation\\\">{</span>\\n              childImageSharp <span class=\\\"token punctuation\\\">{</span>\\n                resize<span class=\\\"token punctuation\\\">(</span><span class=\\\"token attr-name\\\">width</span><span class=\\\"token punctuation\\\">:</span> <span class=\\\"token number\\\">180</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token attr-name\\\">height</span><span class=\\\"token punctuation\\\">:</span> <span class=\\\"token number\\\">180</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n                  src\\n                <span class=\\\"token punctuation\\\">}</span>\\n              <span class=\\\"token punctuation\\\">}</span>\\n            <span class=\\\"token punctuation\\\">}</span>\\n          <span class=\\\"token punctuation\\\">}</span>\\n        <span class=\\\"token punctuation\\\">}</span>\\n      <span class=\\\"token punctuation\\\">}</span>\\n    <span class=\\\"token punctuation\\\">}</span>\\n  <span class=\\\"token punctuation\\\">}</span>\\n</code></pre>\\n      </div>\\n<p>To learn more about image processing check</p>\\n<ul>\\n<li>documentation of <a href=\\\"/packages/gatsby-plugin-sharp/\\\">gatsby-plugin-sharp</a>,</li>\\n<li>source code of <a href=\\\"https://github.com/gatsbyjs/gatsby/tree/master/examples/image-processing\\\">image processing example\\nsite</a>.</li>\\n</ul>\\n<h2 id=\\\"sites-gatsby-nodejs-example\\\"><a href=\\\"#sites-gatsby-nodejs-example\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>Site’s <code>gatsby-node.js</code> example</h2>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-javascript\\\"><code><span class=\\\"token keyword\\\">const</span> _ <span class=\\\"token operator\\\">=</span> <span class=\\\"token function\\\">require</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token template-string\\\"><span class=\\\"token string\\\">`lodash`</span></span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token keyword\\\">const</span> Promise <span class=\\\"token operator\\\">=</span> <span class=\\\"token function\\\">require</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token template-string\\\"><span class=\\\"token string\\\">`bluebird`</span></span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token keyword\\\">const</span> path <span class=\\\"token operator\\\">=</span> <span class=\\\"token function\\\">require</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token template-string\\\"><span class=\\\"token string\\\">`path`</span></span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token keyword\\\">const</span> slash <span class=\\\"token operator\\\">=</span> <span class=\\\"token function\\\">require</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token template-string\\\"><span class=\\\"token string\\\">`slash`</span></span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token comment\\\">// Implement the Gatsby API “createPages”. This is</span>\\n<span class=\\\"token comment\\\">// called after the Gatsby bootstrap is finished so you have</span>\\n<span class=\\\"token comment\\\">// access to any information necessary to programmatically</span>\\n<span class=\\\"token comment\\\">// create pages.</span>\\n<span class=\\\"token comment\\\">// Will create pages for WordPress pages (route : /{slug})</span>\\n<span class=\\\"token comment\\\">// Will create pages for WordPress posts (route : /post/{slug})</span>\\nexports<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function-variable function\\\">createPages</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">{</span> graphql<span class=\\\"token punctuation\\\">,</span> boundActionCreators <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token keyword\\\">const</span> <span class=\\\"token punctuation\\\">{</span> createPage <span class=\\\"token punctuation\\\">}</span> <span class=\\\"token operator\\\">=</span> boundActionCreators<span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token keyword\\\">return</span> <span class=\\\"token keyword\\\">new</span> <span class=\\\"token class-name\\\">Promise</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">(</span>resolve<span class=\\\"token punctuation\\\">,</span> reject<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token comment\\\">// The “graphql” function allows us to run arbitrary</span>\\n    <span class=\\\"token comment\\\">// queries against the local WordPress graphql schema. Think of</span>\\n    <span class=\\\"token comment\\\">// it like the site has a built-in database constructed</span>\\n    <span class=\\\"token comment\\\">// from the fetched data that you can run queries against.</span>\\n\\n    <span class=\\\"token comment\\\">// ==== PAGES (WORDPRESS NATIVE) ====</span>\\n    <span class=\\\"token function\\\">graphql</span><span class=\\\"token punctuation\\\">(</span>\\n      <span class=\\\"token template-string\\\"><span class=\\\"token string\\\">`\\n        {\\n          allWordpressPage {\\n            edges {\\n              node {\\n                id\\n                slug\\n                status\\n                template\\n              }\\n            }\\n          }\\n        }\\n      `</span></span>\\n    <span class=\\\"token punctuation\\\">)</span>\\n      <span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">then</span><span class=\\\"token punctuation\\\">(</span>result <span class=\\\"token operator\\\">=></span> <span class=\\\"token punctuation\\\">{</span>\\n        <span class=\\\"token keyword\\\">if</span> <span class=\\\"token punctuation\\\">(</span>result<span class=\\\"token punctuation\\\">.</span>errors<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n          console<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">log</span><span class=\\\"token punctuation\\\">(</span>result<span class=\\\"token punctuation\\\">.</span>errors<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n          <span class=\\\"token function\\\">reject</span><span class=\\\"token punctuation\\\">(</span>result<span class=\\\"token punctuation\\\">.</span>errors<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n        <span class=\\\"token punctuation\\\">}</span>\\n\\n        <span class=\\\"token comment\\\">// Create Page pages.</span>\\n        <span class=\\\"token keyword\\\">const</span> pageTemplate <span class=\\\"token operator\\\">=</span> path<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">resolve</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">\\\"./src/templates/page.js\\\"</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n        <span class=\\\"token comment\\\">// We want to create a detailed page for each</span>\\n        <span class=\\\"token comment\\\">// page node. We'll just use the WordPress Slug for the slug.</span>\\n        <span class=\\\"token comment\\\">// The Page ID is prefixed with 'PAGE_'</span>\\n        _<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">each</span><span class=\\\"token punctuation\\\">(</span>result<span class=\\\"token punctuation\\\">.</span>data<span class=\\\"token punctuation\\\">.</span>allWordpressPage<span class=\\\"token punctuation\\\">.</span>edges<span class=\\\"token punctuation\\\">,</span> edge <span class=\\\"token operator\\\">=></span> <span class=\\\"token punctuation\\\">{</span>\\n          <span class=\\\"token comment\\\">// Gatsby uses Redux to manage its internal state.</span>\\n          <span class=\\\"token comment\\\">// Plugins and sites can use functions like \\\"createPage\\\"</span>\\n          <span class=\\\"token comment\\\">// to interact with Gatsby.</span>\\n          <span class=\\\"token function\\\">createPage</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">{</span>\\n            <span class=\\\"token comment\\\">// Each page is required to have a `path` as well</span>\\n            <span class=\\\"token comment\\\">// as a template component. The `context` is</span>\\n            <span class=\\\"token comment\\\">// optional but is often necessary so the template</span>\\n            <span class=\\\"token comment\\\">// can query data specific to each page.</span>\\n            path<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token template-string\\\"><span class=\\\"token string\\\">`/</span><span class=\\\"token interpolation\\\"><span class=\\\"token interpolation-punctuation punctuation\\\">${</span>edge<span class=\\\"token punctuation\\\">.</span>node<span class=\\\"token punctuation\\\">.</span>slug<span class=\\\"token interpolation-punctuation punctuation\\\">}</span></span><span class=\\\"token string\\\">/`</span></span><span class=\\\"token punctuation\\\">,</span>\\n            component<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token function\\\">slash</span><span class=\\\"token punctuation\\\">(</span>pageTemplate<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">,</span>\\n            context<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token punctuation\\\">{</span>\\n              id<span class=\\\"token punctuation\\\">:</span> edge<span class=\\\"token punctuation\\\">.</span>node<span class=\\\"token punctuation\\\">.</span>id<span class=\\\"token punctuation\\\">,</span>\\n            <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span>\\n          <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n        <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n      <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span>\\n      <span class=\\\"token comment\\\">// ==== END PAGES ====</span>\\n\\n      <span class=\\\"token comment\\\">// ==== POSTS (WORDPRESS NATIVE AND ACF) ====</span>\\n      <span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">then</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token punctuation\\\">{</span>\\n        <span class=\\\"token function\\\">graphql</span><span class=\\\"token punctuation\\\">(</span>\\n          <span class=\\\"token template-string\\\"><span class=\\\"token string\\\">`\\n            {\\n              allWordpressPost {\\n                edges {\\n                  node {\\n                    id\\n                    slug\\n                    status\\n                    template\\n                    format\\n                  }\\n                }\\n              }\\n            }\\n          `</span></span>\\n        <span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">then</span><span class=\\\"token punctuation\\\">(</span>result <span class=\\\"token operator\\\">=></span> <span class=\\\"token punctuation\\\">{</span>\\n          <span class=\\\"token keyword\\\">if</span> <span class=\\\"token punctuation\\\">(</span>result<span class=\\\"token punctuation\\\">.</span>errors<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n            console<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">log</span><span class=\\\"token punctuation\\\">(</span>result<span class=\\\"token punctuation\\\">.</span>errors<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n            <span class=\\\"token function\\\">reject</span><span class=\\\"token punctuation\\\">(</span>result<span class=\\\"token punctuation\\\">.</span>errors<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n          <span class=\\\"token punctuation\\\">}</span>\\n          <span class=\\\"token keyword\\\">const</span> postTemplate <span class=\\\"token operator\\\">=</span> path<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">resolve</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">\\\"./src/templates/post.js\\\"</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n          <span class=\\\"token comment\\\">// We want to create a detailed page for each</span>\\n          <span class=\\\"token comment\\\">// post node. We'll just use the WordPress Slug for the slug.</span>\\n          <span class=\\\"token comment\\\">// The Post ID is prefixed with 'POST_'</span>\\n          _<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">each</span><span class=\\\"token punctuation\\\">(</span>result<span class=\\\"token punctuation\\\">.</span>data<span class=\\\"token punctuation\\\">.</span>allWordpressPost<span class=\\\"token punctuation\\\">.</span>edges<span class=\\\"token punctuation\\\">,</span> edge <span class=\\\"token operator\\\">=></span> <span class=\\\"token punctuation\\\">{</span>\\n            <span class=\\\"token function\\\">createPage</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">{</span>\\n              path<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token template-string\\\"><span class=\\\"token string\\\">`/</span><span class=\\\"token interpolation\\\"><span class=\\\"token interpolation-punctuation punctuation\\\">${</span>edge<span class=\\\"token punctuation\\\">.</span>node<span class=\\\"token punctuation\\\">.</span>slug<span class=\\\"token interpolation-punctuation punctuation\\\">}</span></span><span class=\\\"token string\\\">/`</span></span><span class=\\\"token punctuation\\\">,</span>\\n              component<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token function\\\">slash</span><span class=\\\"token punctuation\\\">(</span>postTemplate<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">,</span>\\n              context<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token punctuation\\\">{</span>\\n                id<span class=\\\"token punctuation\\\">:</span> edge<span class=\\\"token punctuation\\\">.</span>node<span class=\\\"token punctuation\\\">.</span>id<span class=\\\"token punctuation\\\">,</span>\\n              <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span>\\n            <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n          <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n          <span class=\\\"token function\\\">resolve</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n        <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n      <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token comment\\\">// ==== END POSTS ====</span>\\n  <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">;</span>\\n</code></pre>\\n      </div>\",\"excerpt\":\"gatsby-source-wordpress Source plugin for pulling data into  Gatsby  from\\nWordPress sites using the\\n WordPress JSON REST API . An example…\",\"timeToRead\":9,\"fields\":{\"title\":\"gatsby-source-wordpress\"},\"parent\":{\"__typename\":\"File\",\"relativePath\":\"gatsby-source-wordpress/README.md\"}}},\"pathContext\":{\"slug\":\"/packages/gatsby-source-wordpress/\"}}\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// path---packages-gatsby-source-wordpress-949304362fd7e0e70227.js","module.exports = {\"data\":{\"markdownRemark\":{\"html\":\"<h1 id=\\\"gatsby-source-wordpress\\\"><a href=\\\"#gatsby-source-wordpress\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>gatsby-source-wordpress</h1>\\n<p>Source plugin for pulling data into <a href=\\\"https://github.com/gatsbyjs\\\">Gatsby</a> from\\nWordPress sites using the\\n<a href=\\\"https://developer.wordpress.org/rest-api/reference/\\\">WordPress JSON REST API</a>.</p>\\n<p>An example site for this plugin is available.</p>\\n<ul>\\n<li><a href=\\\"https://using-wordpress.gatsbyjs.org/\\\">Demo</a></li>\\n<li><a href=\\\"https://github.com/gatsbyjs/gatsby/tree/master/examples/using-wordpress\\\">Example site source code</a></li>\\n</ul>\\n<h2 id=\\\"features\\\"><a href=\\\"#features\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>Features</h2>\\n<ul>\\n<li>Pulls data from self-hosted WordPress sites, hosted on wordpress.com or\\nwordpress.org</li>\\n<li>Should work with any number of article and post (tested on a site with 900\\nposts)</li>\\n<li>Can authenticate to wordpress.com’s API using OAuth 2 so media can be queried</li>\\n<li>Easily create responsive images in Gatsby from WordPress images. See <a href=\\\"#image-processing\\\">image\\nprocessing</a> section.</li>\\n</ul>\\n<h2 id=\\\"wordpress-and-custom-entities\\\"><a href=\\\"#wordpress-and-custom-entities\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>WordPress and custom entities</h2>\\n<p>This module currently pulls from WordPress the following entities:</p>\\n<ul>\\n<li class=\\\"task-list-item\\\"><input type=\\\"checkbox\\\" checked disabled> All entities are supported (posts, pages, tags, categories, media, types,\\nusers, statuses, taxonomies, …)</li>\\n<li class=\\\"task-list-item\\\"><input type=\\\"checkbox\\\" checked disabled> Any new entity should be pulled as long the IDs are correct.</li>\\n<li class=\\\"task-list-item\\\"><input type=\\\"checkbox\\\" checked disabled> <a href=\\\"https://www.advancedcustomfields.com/\\\">ACF Entities (Advanced Custom Fields)</a></li>\\n<li class=\\\"task-list-item\\\"><input type=\\\"checkbox\\\" checked disabled> Custom post types (any type you could have declared using WordPress’\\n<code>functions.php</code>)</li>\\n</ul>\\n<p>We welcome PRs adding support for data from other plugins.</p>\\n<h2 id=\\\"install\\\"><a href=\\\"#install\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>Install</h2>\\n<p><code>npm install --save gatsby-source-wordpress</code></p>\\n<h2 id=\\\"how-to-use\\\"><a href=\\\"#how-to-use\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>How to use</h2>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-javascript\\\"><code><span class=\\\"token comment\\\">// In your gatsby-config.js</span>\\nplugins<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token punctuation\\\">[</span>\\n  <span class=\\\"token comment\\\">/*\\n     * Gatsby's data processing layer begins with “source”\\n     * plugins. Here the site sources its data from Wordpress.\\n     */</span>\\n  <span class=\\\"token punctuation\\\">{</span>\\n    resolve<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">\\\"gatsby-source-wordpress\\\"</span><span class=\\\"token punctuation\\\">,</span>\\n    options<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token punctuation\\\">{</span>\\n      <span class=\\\"token comment\\\">/*\\n        * The base URL of the Wordpress site without the trailingslash and the protocol. This is required.\\n        * Example : 'gatsbyjsexamplewordpress.wordpress.com' or 'www.example-site.com'\\n        */</span>\\n      baseUrl<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">\\\"gatsbyjsexamplewordpress.wordpress.com\\\"</span><span class=\\\"token punctuation\\\">,</span>\\n      <span class=\\\"token comment\\\">// The protocol. This can be http or https.</span>\\n      protocol<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">\\\"http\\\"</span><span class=\\\"token punctuation\\\">,</span>\\n      <span class=\\\"token comment\\\">// Indicates whether the site is hosted on wordpress.com.</span>\\n      <span class=\\\"token comment\\\">// If false, then the asumption is made that the site is self hosted.</span>\\n      <span class=\\\"token comment\\\">// If true, then the plugin will source its content on wordpress.com using the JSON REST API V2.</span>\\n      <span class=\\\"token comment\\\">// If your site is hosted on wordpress.org, then set this to false.</span>\\n      hostingWPCOM<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token boolean\\\">true</span><span class=\\\"token punctuation\\\">,</span>\\n      <span class=\\\"token comment\\\">// If useACF is true, then the source plugin will try to import the Wordpress ACF Plugin contents.</span>\\n      <span class=\\\"token comment\\\">// This feature is untested for sites hosted on Wordpress.com.</span>\\n      <span class=\\\"token comment\\\">// Defaults to true.</span>\\n      useACF<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token boolean\\\">true</span><span class=\\\"token punctuation\\\">,</span>\\n      auth<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token punctuation\\\">{</span>\\n        <span class=\\\"token comment\\\">// If auth.user and auth.pass are filled, then the source plugin will be allowed</span>\\n        <span class=\\\"token comment\\\">// to access endpoints that are protected with .htaccess.</span>\\n        htaccess_user<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">\\\"your-htaccess-username\\\"</span><span class=\\\"token punctuation\\\">,</span>\\n        htaccess_pass<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">\\\"your-htaccess-password\\\"</span><span class=\\\"token punctuation\\\">,</span>\\n        htaccess_sendImmediately<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token boolean\\\">false</span><span class=\\\"token punctuation\\\">,</span>\\n\\n        <span class=\\\"token comment\\\">// If hostingWPCOM is true then you will need to communicate with wordpress.com API</span>\\n        <span class=\\\"token comment\\\">// in order to do that you need to create an app (of type Web) at https://developer.wordpress.com/apps/</span>\\n        <span class=\\\"token comment\\\">// then add your clientId, clientSecret, username, and password here</span>\\n        wpcom_app_clientSecret<span class=\\\"token punctuation\\\">:</span>\\n          <span class=\\\"token string\\\">\\\"NMPnXYFtj2gKas7V1kZyMxr7oLry9V5ZxIyBQGu2txjVHg0GhFz6RYcKopkHICYg\\\"</span><span class=\\\"token punctuation\\\">,</span>\\n        wpcom_app_clientId<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">\\\"54793\\\"</span><span class=\\\"token punctuation\\\">,</span>\\n        wpcom_user<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">\\\"gatsbyjswpexample@gmail.com\\\"</span><span class=\\\"token punctuation\\\">,</span>\\n        wpcom_pass<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">\\\"very-secured-password\\\"</span><span class=\\\"token punctuation\\\">,</span>\\n      <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span>\\n      <span class=\\\"token comment\\\">// Set verboseOutput to true to display a verbose output on `npm run develop` or `npm run build`</span>\\n      <span class=\\\"token comment\\\">// It can help you debug specific API Endpoints problems</span>\\n      verboseOutput<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token boolean\\\">false</span><span class=\\\"token punctuation\\\">,</span>\\n    <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span>\\n  <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span>\\n<span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">;</span>\\n</code></pre>\\n      </div>\\n<h2 id=\\\"wordpress-plugins\\\"><a href=\\\"#wordpress-plugins\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>WordPress Plugins</h2>\\n<p>These plugins were tested. We welcome PRs adding support for data from other\\nplugins.</p>\\n<ul>\\n<li class=\\\"task-list-item\\\">\\n<p><input type=\\\"checkbox\\\" checked disabled> Custom Post Types : it will work seemlessly, no further option needs to be\\nactivated. (“Show in REST API” setting needs to be set to true on the\\ncustom post in the plugin settings for this to work. It’s set to “false”\\nby default.)</p>\\n</li>\\n<li class=\\\"task-list-item\\\">\\n<p><input type=\\\"checkbox\\\" checked disabled> <a href=\\\"https://www.advancedcustomfields.com/\\\">ACF</a> The option <code>useACF: true</code>\\nmust be activated in your site’s <code>gatsby-config.js</code>.</p>\\n<ul>\\n<li>You must have the plugin\\n<a href=\\\"https://github.com/airesvsg/acf-to-rest-api\\\">acf-to-rest-api</a> installed in\\nWordPress.</li>\\n<li>Will pull the <code>acf: { ... }</code> fields’s contents from any entity which has it\\nattached (pages, posts, medias, … you choose from in WordPress back-end\\nwhile creating a Group of Fields).</li>\\n<li><a href=\\\"https://www.advancedcustomfields.com/pro/\\\">ACF Pro</a> same as ACF :</li>\\n<li>Will work with\\n<a href=\\\"https://www.advancedcustomfields.com/resources/flexible-content/\\\">Flexible content</a>\\nand premium stuff like that (repeater, gallery, …).</li>\\n<li>Will pull the content attached to the\\n<a href=\\\"https://www.advancedcustomfields.com/add-ons/options-page/\\\">options page</a>.</li>\\n</ul>\\n</li>\\n<li class=\\\"task-list-item\\\">\\n<p><input type=\\\"checkbox\\\" checked disabled> <a href=\\\"https://wordpress.org/plugins/wp-api-menus/\\\">WP-API-MENUS</a> which gives\\nyou the menus and menu locations endpoint.</p>\\n</li>\\n<li class=\\\"task-list-item\\\">\\n<p><input type=\\\"checkbox\\\" checked disabled> <a href=\\\"https://github.com/shawnhooper/wpml-rest-api\\\">WPML-REST-API</a> which adds\\nthe current locale and available translations to all post types.</p>\\n</li>\\n</ul>\\n<h2 id=\\\"how-to-use-gatsby-with-wordpresscom-hosting\\\"><a href=\\\"#how-to-use-gatsby-with-wordpresscom-hosting\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>How to use Gatsby with Wordpress.com hosting</h2>\\n<p>Set <code>hostingWPCOM: true</code>.</p>\\n<p>You will need to provide an (API\\nKey)[https://en.support.wordpress.com/api-keys/].</p>\\n<p>Note : you don’t need this for Wordpress.org hosting in which your WordPress\\nwill behave like a self-hosted instance.</p>\\n<h2 id=\\\"how-to-query\\\"><a href=\\\"#how-to-query\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>How to query</h2>\\n<p>You can query nodes created from Wordpress using GraphQL like the following:\\nNote : Learn to use the GraphQL tool and Ctrl+Spacebar at\\n<a href=\\\"http://localhost:3000/___graphiql\\\">http://localhost:3000/___graphiql</a> to discover the types and properties of your\\nGraphQL model.</p>\\n<h3 id=\\\"query-posts\\\"><a href=\\\"#query-posts\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>Query posts</h3>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-graphql\\\"><code>  allWordpressPost <span class=\\\"token punctuation\\\">{</span>\\n    edges <span class=\\\"token punctuation\\\">{</span>\\n      node <span class=\\\"token punctuation\\\">{</span>\\n        id\\n        slug\\n        title\\n        content\\n        excerpt\\n        date\\n        modified\\n      <span class=\\\"token punctuation\\\">}</span>\\n    <span class=\\\"token punctuation\\\">}</span>\\n  <span class=\\\"token punctuation\\\">}</span>\\n</code></pre>\\n      </div>\\n<h3 id=\\\"query-pages\\\"><a href=\\\"#query-pages\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>Query pages</h3>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-graphql\\\"><code>  allWordpressPage <span class=\\\"token punctuation\\\">{</span>\\n    edges <span class=\\\"token punctuation\\\">{</span>\\n      node <span class=\\\"token punctuation\\\">{</span>\\n        id\\n        title\\n        content\\n        excerpt\\n        date\\n        modified\\n        slug\\n        status\\n      <span class=\\\"token punctuation\\\">}</span>\\n    <span class=\\\"token punctuation\\\">}</span>\\n  <span class=\\\"token punctuation\\\">}</span>\\n</code></pre>\\n      </div>\\n<p>Same thing for other type of entity (tag, media, categories, …).</p>\\n<h3 id=\\\"query-any-other-entity\\\"><a href=\\\"#query-any-other-entity\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>Query any other entity</h3>\\n<p>In the following example, <code>${Manufacturer}</code> will be replaced by the endpoint\\nprefix and <code>${Endpoint}</code> by the name of the endpoint.</p>\\n<p>To know what’s what, check the URL of the endpoint. You can set <code>verboseOutput: true</code> in order to get more information of what’s executed by the source plugin\\nbehind the scene.</p>\\n<p>For example the following URL:\\n<code>http://my-blog.wordpress.com/wp-json/acf/v2/options</code></p>\\n<ul>\\n<li>Manufacturer : <code>acf</code></li>\\n<li>Endpoint : <code>options</code></li>\\n<li>Final GraphQL Type : AllWordpressAcfOptions</li>\\n</ul>\\n<p>For example the following URL:\\n<code>http://my-blog.wordpress.com/wp-api-menus/v2/menu-locations</code></p>\\n<ul>\\n<li>Manufacturer : <code>wpapimenus</code></li>\\n<li>Endpoint : <code>menulocations</code></li>\\n<li>Final GraphQL Type : AllWordpressWpApiMenusMenuLocations</li>\\n</ul>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-graphql\\\"><code>  allWordpress$<span class=\\\"token punctuation\\\">{</span>Manufacturer<span class=\\\"token punctuation\\\">}</span>$<span class=\\\"token punctuation\\\">{</span>Endpoint<span class=\\\"token punctuation\\\">}</span> <span class=\\\"token punctuation\\\">{</span>\\n    edges <span class=\\\"token punctuation\\\">{</span>\\n      node <span class=\\\"token punctuation\\\">{</span>\\n        id\\n       type\\n        // Put your fields here\\n      <span class=\\\"token punctuation\\\">}</span>\\n    <span class=\\\"token punctuation\\\">}</span>\\n  <span class=\\\"token punctuation\\\">}</span>\\n</code></pre>\\n      </div>\\n<h3 id=\\\"query-posts-with-the-child-acf-fields-node\\\"><a href=\\\"#query-posts-with-the-child-acf-fields-node\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>Query posts with the child ACF Fields Node</h3>\\n<p>Mention the apparition of <code>childWordpressAcfField</code> in the query below :</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-graphql\\\"><code>  allWordpressPost <span class=\\\"token punctuation\\\">{</span>\\n    edges <span class=\\\"token punctuation\\\">{</span>\\n      node <span class=\\\"token punctuation\\\">{</span>\\n        id\\n        slug\\n        title\\n        content\\n        excerpt\\n        date\\n        modified\\n        author\\n        featured_media\\n        template\\n        categories\\n        tags\\n        acf <span class=\\\"token punctuation\\\">{</span>\\n         // use ___GraphiQL debugger and Ctrl+Spacebar to describe your model.\\n        <span class=\\\"token punctuation\\\">}</span>\\n      <span class=\\\"token punctuation\\\">}</span>\\n    <span class=\\\"token punctuation\\\">}</span>\\n  <span class=\\\"token punctuation\\\">}</span>\\n</code></pre>\\n      </div>\\n<h3 id=\\\"query-pages-with-the-child-acf-fields-node\\\"><a href=\\\"#query-pages-with-the-child-acf-fields-node\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>Query pages with the child ACF Fields Node</h3>\\n<p>Mention the apparition of <code>childWordpressAcfField</code> in the query below :</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-graphql\\\"><code>  allWordpressPage <span class=\\\"token punctuation\\\">{</span>\\n    edges <span class=\\\"token punctuation\\\">{</span>\\n      node <span class=\\\"token punctuation\\\">{</span>\\n        id\\n        title\\n        content\\n        excerpt\\n        date\\n        modified\\n        slug\\n        author\\n        featured_media\\n        template\\n        acf <span class=\\\"token punctuation\\\">{</span>\\n         // use ___GraphiQL debugger and Ctrl+Spacebar to describe your model.\\n        <span class=\\\"token punctuation\\\">}</span>\\n      <span class=\\\"token punctuation\\\">}</span>\\n    <span class=\\\"token punctuation\\\">}</span>\\n  <span class=\\\"token punctuation\\\">}</span>\\n</code></pre>\\n      </div>\\n<h3 id=\\\"query-with-acf-flexible-content\\\"><a href=\\\"#query-with-acf-flexible-content\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>Query with ACF Flexible Content</h3>\\n<p>ACF Flexible Content returns an array of objects with different types and are\\nhandled differently than other fields.</p>\\n<p>To access those fields, instead of using their field name, you need to use\\n<code>[field_name]_[post_type]</code> (if you have field named <code>page_builder</code> in\\nyour WordPress pages you would need to use <code>page_builder_page</code>).</p>\\n<p>To access data stored in these fields, you need to use GraphQL\\n<a href=\\\"http://graphql.org/learn/queries/#inline-fragments\\\">inline fragments</a>. This\\nrequire you to know types of nodes. The easiest way to get the types of nodes is to use\\n<code>___GraphiQL</code> debugger and run the below query (adjust post type and field name):</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-graphql\\\"><code>  allWordpressPage <span class=\\\"token punctuation\\\">{</span>\\n    edges <span class=\\\"token punctuation\\\">{</span>\\n      node <span class=\\\"token punctuation\\\">{</span>\\n        title\\n        acf <span class=\\\"token punctuation\\\">{</span>\\n          page_builder_page <span class=\\\"token punctuation\\\">{</span>\\n            __typename\\n          <span class=\\\"token punctuation\\\">}</span>\\n        <span class=\\\"token punctuation\\\">}</span>\\n      <span class=\\\"token punctuation\\\">}</span>\\n    <span class=\\\"token punctuation\\\">}</span>\\n  <span class=\\\"token punctuation\\\">}</span>\\n</code></pre>\\n      </div>\\n<p>When you have node type names, you can use them to create inline fragments.</p>\\n<p>Full example:</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-graphql\\\"><code>  allWordpressPage <span class=\\\"token punctuation\\\">{</span>\\n    edges <span class=\\\"token punctuation\\\">{</span>\\n      node <span class=\\\"token punctuation\\\">{</span>\\n        title\\n        acf <span class=\\\"token punctuation\\\">{</span>\\n          page_builder_page <span class=\\\"token punctuation\\\">{</span>\\n            __typename\\n            <span class=\\\"token operator\\\">...</span> <span class=\\\"token keyword\\\">on</span> WordPressAcf_hero <span class=\\\"token punctuation\\\">{</span>\\n              title\\n              subtitle\\n            <span class=\\\"token punctuation\\\">}</span>\\n            <span class=\\\"token operator\\\">...</span> <span class=\\\"token keyword\\\">on</span> WordpressAcf_text <span class=\\\"token punctuation\\\">{</span>\\n              text\\n            <span class=\\\"token punctuation\\\">}</span>\\n            <span class=\\\"token operator\\\">...</span> <span class=\\\"token keyword\\\">on</span> WordpressAcf_image <span class=\\\"token punctuation\\\">{</span>\\n              image <span class=\\\"token punctuation\\\">{</span>\\n                localFile <span class=\\\"token punctuation\\\">{</span>\\n                  childImageSharp <span class=\\\"token punctuation\\\">{</span>\\n                    sizes<span class=\\\"token punctuation\\\">(</span><span class=\\\"token attr-name\\\">maxWidth</span><span class=\\\"token punctuation\\\">:</span> <span class=\\\"token number\\\">800</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n                      <span class=\\\"token operator\\\">...</span>GatsbyImageSharpSizes_withWebp\\n                    <span class=\\\"token punctuation\\\">}</span>\\n                  <span class=\\\"token punctuation\\\">}</span>\\n                <span class=\\\"token punctuation\\\">}</span>\\n              <span class=\\\"token punctuation\\\">}</span>\\n            <span class=\\\"token punctuation\\\">}</span>\\n          <span class=\\\"token punctuation\\\">}</span>\\n        <span class=\\\"token punctuation\\\">}</span>\\n      <span class=\\\"token punctuation\\\">}</span>\\n    <span class=\\\"token punctuation\\\">}</span>\\n  <span class=\\\"token punctuation\\\">}</span>\\n</code></pre>\\n      </div>\\n<h3 id=\\\"query-posts-with-the-wpml-fields-node\\\"><a href=\\\"#query-posts-with-the-wpml-fields-node\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>Query posts with the WPML Fields Node</h3>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-graphql\\\"><code>  allWordpressPost <span class=\\\"token punctuation\\\">{</span>\\n    edges <span class=\\\"token punctuation\\\">{</span>\\n      node <span class=\\\"token punctuation\\\">{</span>\\n        id\\n        slug\\n        title\\n        content\\n        excerpt\\n        date\\n        modified\\n        author\\n        featured_media\\n        template\\n        categories\\n        tags\\n        wpml_current_locale\\n        wpml_translations <span class=\\\"token punctuation\\\">{</span>\\n          locale\\n          wordpress_id\\n          post_title\\n          href\\n        <span class=\\\"token punctuation\\\">}</span>\\n      <span class=\\\"token punctuation\\\">}</span>\\n    <span class=\\\"token punctuation\\\">}</span>\\n  <span class=\\\"token punctuation\\\">}</span>\\n</code></pre>\\n      </div>\\n<h3 id=\\\"query-pages-with-the-wpml-fields-node\\\"><a href=\\\"#query-pages-with-the-wpml-fields-node\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>Query pages with the WPML Fields Node</h3>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-graphql\\\"><code>  allWordpressPage <span class=\\\"token punctuation\\\">{</span>\\n    edges <span class=\\\"token punctuation\\\">{</span>\\n      node <span class=\\\"token punctuation\\\">{</span>\\n        id\\n        title\\n        content\\n        excerpt\\n        date\\n        modified\\n        slug\\n        author\\n        featured_media\\n        template\\n        wpml_current_locale\\n        wpml_translations <span class=\\\"token punctuation\\\">{</span>\\n          locale\\n          wordpress_id\\n          post_title\\n          href\\n        <span class=\\\"token punctuation\\\">}</span>\\n      <span class=\\\"token punctuation\\\">}</span>\\n    <span class=\\\"token punctuation\\\">}</span>\\n  <span class=\\\"token punctuation\\\">}</span>\\n</code></pre>\\n      </div>\\n<h3 id=\\\"image-processing\\\"><a href=\\\"#image-processing\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>Image processing</h3>\\n<p>To use image processing you need <code>gatsby-transformer-sharp</code> and\\n<code>gatsby-plugin-sharp</code> in your <code>gatsby-config.js</code>.</p>\\n<p>You can apply image processing to:</p>\\n<ul>\\n<li>featured images (also known as post thumbnails),</li>\\n<li>\\n<p>ACF fields:</p>\\n<ul>\\n<li>Image field type (return value must be set to <code>Image Object</code> or <code>Image URL</code> or field name must be <code>featured_media</code>),</li>\\n<li>Gallery field type.</li>\\n</ul>\\n</li>\\n</ul>\\n<p>Image processing of inline images added in wordpress WYSIWIG editor is\\ncurrently not supported.</p>\\n<p>To access image processing in your queries you need to use this pattern:</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-none\\\"><code>imageFieldName {\\n  localFile {\\n    childImageSharp {\\n      ...\\n    }\\n  }\\n}</code></pre>\\n      </div>\\n<p>Full example:</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-graphql\\\"><code>  allWordpressPost <span class=\\\"token punctuation\\\">{</span>\\n    edges <span class=\\\"token punctuation\\\">{</span>\\n      node <span class=\\\"token punctuation\\\">{</span>\\n        title\\n        featured_media <span class=\\\"token punctuation\\\">{</span>\\n          localFile <span class=\\\"token punctuation\\\">{</span>\\n            childImageSharp <span class=\\\"token punctuation\\\">{</span>\\n              resolutions<span class=\\\"token punctuation\\\">(</span><span class=\\\"token attr-name\\\">width</span><span class=\\\"token punctuation\\\">:</span> <span class=\\\"token number\\\">500</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token attr-name\\\">height</span><span class=\\\"token punctuation\\\">:</span> <span class=\\\"token number\\\">300</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n                <span class=\\\"token operator\\\">...</span>GatsbyImageSharpResolutions_withWebp\\n              <span class=\\\"token punctuation\\\">}</span>\\n            <span class=\\\"token punctuation\\\">}</span>\\n          <span class=\\\"token punctuation\\\">}</span>\\n        <span class=\\\"token punctuation\\\">}</span>\\n        acf <span class=\\\"token punctuation\\\">{</span>\\n          image <span class=\\\"token punctuation\\\">{</span>\\n            localFile <span class=\\\"token punctuation\\\">{</span>\\n              childImageSharp <span class=\\\"token punctuation\\\">{</span>\\n                sizes<span class=\\\"token punctuation\\\">(</span><span class=\\\"token attr-name\\\">maxWidth</span><span class=\\\"token punctuation\\\">:</span> <span class=\\\"token number\\\">500</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n                  <span class=\\\"token operator\\\">...</span>GatsbyImageSharpSizes_withWebp\\n                <span class=\\\"token punctuation\\\">}</span>\\n              <span class=\\\"token punctuation\\\">}</span>\\n            <span class=\\\"token punctuation\\\">}</span>\\n          <span class=\\\"token punctuation\\\">}</span>\\n          gallery <span class=\\\"token punctuation\\\">{</span>\\n            localFile <span class=\\\"token punctuation\\\">{</span>\\n              childImageSharp <span class=\\\"token punctuation\\\">{</span>\\n                resize<span class=\\\"token punctuation\\\">(</span><span class=\\\"token attr-name\\\">width</span><span class=\\\"token punctuation\\\">:</span> <span class=\\\"token number\\\">180</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token attr-name\\\">height</span><span class=\\\"token punctuation\\\">:</span> <span class=\\\"token number\\\">180</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n                  src\\n                <span class=\\\"token punctuation\\\">}</span>\\n              <span class=\\\"token punctuation\\\">}</span>\\n            <span class=\\\"token punctuation\\\">}</span>\\n          <span class=\\\"token punctuation\\\">}</span>\\n        <span class=\\\"token punctuation\\\">}</span>\\n      <span class=\\\"token punctuation\\\">}</span>\\n    <span class=\\\"token punctuation\\\">}</span>\\n  <span class=\\\"token punctuation\\\">}</span>\\n</code></pre>\\n      </div>\\n<p>To learn more about image processing check</p>\\n<ul>\\n<li>documentation of <a href=\\\"/packages/gatsby-plugin-sharp/\\\">gatsby-plugin-sharp</a>,</li>\\n<li>source code of <a href=\\\"https://github.com/gatsbyjs/gatsby/tree/master/examples/image-processing\\\">image processing example\\nsite</a>.</li>\\n</ul>\\n<h2 id=\\\"sites-gatsby-nodejs-example\\\"><a href=\\\"#sites-gatsby-nodejs-example\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>Site’s <code>gatsby-node.js</code> example</h2>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-javascript\\\"><code><span class=\\\"token keyword\\\">const</span> _ <span class=\\\"token operator\\\">=</span> <span class=\\\"token function\\\">require</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token template-string\\\"><span class=\\\"token string\\\">`lodash`</span></span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token keyword\\\">const</span> Promise <span class=\\\"token operator\\\">=</span> <span class=\\\"token function\\\">require</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token template-string\\\"><span class=\\\"token string\\\">`bluebird`</span></span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token keyword\\\">const</span> path <span class=\\\"token operator\\\">=</span> <span class=\\\"token function\\\">require</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token template-string\\\"><span class=\\\"token string\\\">`path`</span></span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token keyword\\\">const</span> slash <span class=\\\"token operator\\\">=</span> <span class=\\\"token function\\\">require</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token template-string\\\"><span class=\\\"token string\\\">`slash`</span></span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token comment\\\">// Implement the Gatsby API “createPages”. This is</span>\\n<span class=\\\"token comment\\\">// called after the Gatsby bootstrap is finished so you have</span>\\n<span class=\\\"token comment\\\">// access to any information necessary to programmatically</span>\\n<span class=\\\"token comment\\\">// create pages.</span>\\n<span class=\\\"token comment\\\">// Will create pages for WordPress pages (route : /{slug})</span>\\n<span class=\\\"token comment\\\">// Will create pages for WordPress posts (route : /post/{slug})</span>\\nexports<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function-variable function\\\">createPages</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">{</span> graphql<span class=\\\"token punctuation\\\">,</span> boundActionCreators <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token keyword\\\">const</span> <span class=\\\"token punctuation\\\">{</span> createPage <span class=\\\"token punctuation\\\">}</span> <span class=\\\"token operator\\\">=</span> boundActionCreators<span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token keyword\\\">return</span> <span class=\\\"token keyword\\\">new</span> <span class=\\\"token class-name\\\">Promise</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">(</span>resolve<span class=\\\"token punctuation\\\">,</span> reject<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token comment\\\">// The “graphql” function allows us to run arbitrary</span>\\n    <span class=\\\"token comment\\\">// queries against the local WordPress graphql schema. Think of</span>\\n    <span class=\\\"token comment\\\">// it like the site has a built-in database constructed</span>\\n    <span class=\\\"token comment\\\">// from the fetched data that you can run queries against.</span>\\n\\n    <span class=\\\"token comment\\\">// ==== PAGES (WORDPRESS NATIVE) ====</span>\\n    <span class=\\\"token function\\\">graphql</span><span class=\\\"token punctuation\\\">(</span>\\n      <span class=\\\"token template-string\\\"><span class=\\\"token string\\\">`\\n        {\\n          allWordpressPage {\\n            edges {\\n              node {\\n                id\\n                slug\\n                status\\n                template\\n              }\\n            }\\n          }\\n        }\\n      `</span></span>\\n    <span class=\\\"token punctuation\\\">)</span>\\n      <span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">then</span><span class=\\\"token punctuation\\\">(</span>result <span class=\\\"token operator\\\">=></span> <span class=\\\"token punctuation\\\">{</span>\\n        <span class=\\\"token keyword\\\">if</span> <span class=\\\"token punctuation\\\">(</span>result<span class=\\\"token punctuation\\\">.</span>errors<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n          console<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">log</span><span class=\\\"token punctuation\\\">(</span>result<span class=\\\"token punctuation\\\">.</span>errors<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n          <span class=\\\"token function\\\">reject</span><span class=\\\"token punctuation\\\">(</span>result<span class=\\\"token punctuation\\\">.</span>errors<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n        <span class=\\\"token punctuation\\\">}</span>\\n\\n        <span class=\\\"token comment\\\">// Create Page pages.</span>\\n        <span class=\\\"token keyword\\\">const</span> pageTemplate <span class=\\\"token operator\\\">=</span> path<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">resolve</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">\\\"./src/templates/page.js\\\"</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n        <span class=\\\"token comment\\\">// We want to create a detailed page for each</span>\\n        <span class=\\\"token comment\\\">// page node. We'll just use the WordPress Slug for the slug.</span>\\n        <span class=\\\"token comment\\\">// The Page ID is prefixed with 'PAGE_'</span>\\n        _<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">each</span><span class=\\\"token punctuation\\\">(</span>result<span class=\\\"token punctuation\\\">.</span>data<span class=\\\"token punctuation\\\">.</span>allWordpressPage<span class=\\\"token punctuation\\\">.</span>edges<span class=\\\"token punctuation\\\">,</span> edge <span class=\\\"token operator\\\">=></span> <span class=\\\"token punctuation\\\">{</span>\\n          <span class=\\\"token comment\\\">// Gatsby uses Redux to manage its internal state.</span>\\n          <span class=\\\"token comment\\\">// Plugins and sites can use functions like \\\"createPage\\\"</span>\\n          <span class=\\\"token comment\\\">// to interact with Gatsby.</span>\\n          <span class=\\\"token function\\\">createPage</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">{</span>\\n            <span class=\\\"token comment\\\">// Each page is required to have a `path` as well</span>\\n            <span class=\\\"token comment\\\">// as a template component. The `context` is</span>\\n            <span class=\\\"token comment\\\">// optional but is often necessary so the template</span>\\n            <span class=\\\"token comment\\\">// can query data specific to each page.</span>\\n            path<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token template-string\\\"><span class=\\\"token string\\\">`/</span><span class=\\\"token interpolation\\\"><span class=\\\"token interpolation-punctuation punctuation\\\">${</span>edge<span class=\\\"token punctuation\\\">.</span>node<span class=\\\"token punctuation\\\">.</span>slug<span class=\\\"token interpolation-punctuation punctuation\\\">}</span></span><span class=\\\"token string\\\">/`</span></span><span class=\\\"token punctuation\\\">,</span>\\n            component<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token function\\\">slash</span><span class=\\\"token punctuation\\\">(</span>pageTemplate<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">,</span>\\n            context<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token punctuation\\\">{</span>\\n              id<span class=\\\"token punctuation\\\">:</span> edge<span class=\\\"token punctuation\\\">.</span>node<span class=\\\"token punctuation\\\">.</span>id<span class=\\\"token punctuation\\\">,</span>\\n            <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span>\\n          <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n        <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n      <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span>\\n      <span class=\\\"token comment\\\">// ==== END PAGES ====</span>\\n\\n      <span class=\\\"token comment\\\">// ==== POSTS (WORDPRESS NATIVE AND ACF) ====</span>\\n      <span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">then</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token punctuation\\\">{</span>\\n        <span class=\\\"token function\\\">graphql</span><span class=\\\"token punctuation\\\">(</span>\\n          <span class=\\\"token template-string\\\"><span class=\\\"token string\\\">`\\n            {\\n              allWordpressPost {\\n                edges {\\n                  node {\\n                    id\\n                    slug\\n                    status\\n                    template\\n                    format\\n                  }\\n                }\\n              }\\n            }\\n          `</span></span>\\n        <span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">then</span><span class=\\\"token punctuation\\\">(</span>result <span class=\\\"token operator\\\">=></span> <span class=\\\"token punctuation\\\">{</span>\\n          <span class=\\\"token keyword\\\">if</span> <span class=\\\"token punctuation\\\">(</span>result<span class=\\\"token punctuation\\\">.</span>errors<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n            console<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">log</span><span class=\\\"token punctuation\\\">(</span>result<span class=\\\"token punctuation\\\">.</span>errors<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n            <span class=\\\"token function\\\">reject</span><span class=\\\"token punctuation\\\">(</span>result<span class=\\\"token punctuation\\\">.</span>errors<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n          <span class=\\\"token punctuation\\\">}</span>\\n          <span class=\\\"token keyword\\\">const</span> postTemplate <span class=\\\"token operator\\\">=</span> path<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">resolve</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">\\\"./src/templates/post.js\\\"</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n          <span class=\\\"token comment\\\">// We want to create a detailed page for each</span>\\n          <span class=\\\"token comment\\\">// post node. We'll just use the WordPress Slug for the slug.</span>\\n          <span class=\\\"token comment\\\">// The Post ID is prefixed with 'POST_'</span>\\n          _<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">each</span><span class=\\\"token punctuation\\\">(</span>result<span class=\\\"token punctuation\\\">.</span>data<span class=\\\"token punctuation\\\">.</span>allWordpressPost<span class=\\\"token punctuation\\\">.</span>edges<span class=\\\"token punctuation\\\">,</span> edge <span class=\\\"token operator\\\">=></span> <span class=\\\"token punctuation\\\">{</span>\\n            <span class=\\\"token function\\\">createPage</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">{</span>\\n              path<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token template-string\\\"><span class=\\\"token string\\\">`/</span><span class=\\\"token interpolation\\\"><span class=\\\"token interpolation-punctuation punctuation\\\">${</span>edge<span class=\\\"token punctuation\\\">.</span>node<span class=\\\"token punctuation\\\">.</span>slug<span class=\\\"token interpolation-punctuation punctuation\\\">}</span></span><span class=\\\"token string\\\">/`</span></span><span class=\\\"token punctuation\\\">,</span>\\n              component<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token function\\\">slash</span><span class=\\\"token punctuation\\\">(</span>postTemplate<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">,</span>\\n              context<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token punctuation\\\">{</span>\\n                id<span class=\\\"token punctuation\\\">:</span> edge<span class=\\\"token punctuation\\\">.</span>node<span class=\\\"token punctuation\\\">.</span>id<span class=\\\"token punctuation\\\">,</span>\\n              <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span>\\n            <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n          <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n          <span class=\\\"token function\\\">resolve</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n        <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n      <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token comment\\\">// ==== END POSTS ====</span>\\n  <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">;</span>\\n</code></pre>\\n      </div>\",\"excerpt\":\"gatsby-source-wordpress Source plugin for pulling data into  Gatsby  from\\nWordPress sites using the\\n WordPress JSON REST API . An example…\",\"timeToRead\":9,\"fields\":{\"title\":\"gatsby-source-wordpress\"},\"parent\":{\"__typename\":\"File\",\"relativePath\":\"gatsby-source-wordpress/README.md\"}}},\"pathContext\":{\"slug\":\"/packages/gatsby-source-wordpress/\"}}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/json-loader!./.cache/json/packages-gatsby-source-wordpress.json\n// module id = 739\n// module chunks = 119048139915454"],"sourceRoot":""}