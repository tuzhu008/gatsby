{"version":3,"sources":["webpack:///path---blog-2017-10-17-building-i-18-n-with-gatsby-3dd18c7d9d0fb69570c9.js","webpack:///./.cache/json/blog-2017-10-17-building-i-18-n-with-gatsby.json"],"names":["webpackJsonp","605","module","exports","data","markdownRemark","html","excerpt","timeToRead","fields","slug","frontmatter","image","date","rawDate","canonicalLink","publishedAt","title","imageAuthor","imageAuthorLink","imageTitle","showImageInArticle","author","id","bio","twitter","avatar","childImageSharp","resolutions","tracedSVG","width","height","src","srcSet","pathContext","prev","package","draft","next"],"mappings":"AAAAA,cAAc,iBAERC,IACA,SAAUC,EAAQC,GCHxBD,EAAAC,SAAkBC,MAAQC,gBAAkBC,KAAA;AAAo4hCC,QAAA,8IAAs0CC,WAAA,EAAAC,QAA+HC,KAAA,+CAAqDC,aAAgBJ,QAAA,KAAAK,MAAA,KAAAC,KAAA,oBAAAC,QAAA,2BAAAC,cAAA,KAAAC,YAAA,KAAAC,MAAA,4BAAAC,YAAA,KAAAC,gBAAA,KAAAC,WAAA,KAAAC,mBAAA,KAAAC,QAAwQC,GAAA,gBAAAC,IAAA,oDAAAC,QAAA,WAAAC,QAA8GC,iBAAmBC,aAAeC,UAAA,skDAAAC,MAAA,GAAAC,OAAA,GAAAC,IAAA,6EAAAC,OAAA,qUAAygExB,QAAWC,KAAA,oCAA0CwB,aAAgBxB,KAAA,8CAAAyB,MAA6D1B,QAAUC,KAAA,gDAAA0B,QAAA,MAAsEzB,aAAgBM,MAAA,8BAAAoB,MAAA,KAAAtB,cAAA,KAAAC,YAAA,OAA4FsB,MAAS7B,QAAUC,KAAA,6EAAA0B,QAAA,MAAmGzB,aAAgBM,MAAA,6DAAAoB,MAAA,KAAAtB,cAAA,KAAAC,YAAA","file":"path---blog-2017-10-17-building-i-18-n-with-gatsby-3dd18c7d9d0fb69570c9.js","sourcesContent":["webpackJsonp([201564949894374],{\n\n/***/ 605:\n/***/ (function(module, exports) {\n\n\tmodule.exports = {\"data\":{\"markdownRemark\":{\"html\":\"<p>Languages are a key part of who we are; they are an expression of our identity.\\nServing users content in their own language is a powerful thing, and it allows\\nyou to include nuances and specific cultural references in a way Google\\nTranslate just wouldn‚Äôt allow.</p>\\n<p>When we were looking for a new framework for the new\\n<a href=\\\"https://doopoll.co\\\">doopoll</a> marketing site, we knew we‚Äôd want to support i18n\\nfrom the start.</p>\\n<p>We were wowed with Gatsby‚Äôs simplicity and speed, but couldn‚Äôt find any clear\\nprocess for supporting i18n. With a little bit of digging and experimenting,\\nwe‚Äôve found that it‚Äôs just as easy as the rest of the process.</p>\\n<p>Here is how we set up i18n for our Gatsby marketing site, and a few tips along\\nthe way.</p>\\n<hr>\\n<h2 id=\\\"quick-intro-to-i18n\\\"><a href=\\\"#quick-intro-to-i18n\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>Quick intro to i18n</h2>\\n<p>Just in case you‚Äôre new to i18n, don‚Äôt worry, it‚Äôs pretty simple! All we do is\\ntake hard-coded strings like ‚ÄúHello‚Äù and replace them with a variable so that\\nwhen the language changes, so does the string.</p>\\n<p>So for example rather than write <code>&#x3C;h1>Hello&#x3C;/h1></code>. I might write\\n<code>&#x3C;h1>{t(hello)}</code> (more on this later), and the user would see ‚ÄòHello‚Äô,\\n‚ÄòBonjour‚Äô, or ‚ÄòHola‚Äô depending on what language they had switched to, and\\nwhether we‚Äôd added a translation for it.</p>\\n<h3 id=\\\"tip-a-quick-note-on-language-codes\\\"><a href=\\\"#tip-a-quick-note-on-language-codes\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>TIP: A quick note on language codes</h3>\\n<p><a href=\\\"https://www.science.co.il/language/Codes.php\\\">Each language has a unique code</a>.\\nWe use this code to reference a language in our code. If you see a hyphen and\\nthen some letters after it, they refer to the locale. So for example:</p>\\n<p>en = English cy = Welsh es = Spanish en-GB = British English en-US = American\\nEnglish</p>\\n<p>The locale allows us to make changes to spelling (for example, ‚Äúcolour‚Äù vs.\\n‚Äúcolor‚Äù), but can also be used for other functions such as currency.</p>\\n<h2 id=\\\"working-with-translators\\\"><a href=\\\"#working-with-translators\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>Working with translators</h2>\\n<p>At doopoll we speak multiple languages, but just like design, development, and\\ncopywriting, translation requires time and skill to get it right. That‚Äôs why we\\nwork with our awesome friends at <a href=\\\"https://applingua.com/\\\">Applingua</a> who handle\\nall of our translation, and push new strings straight to our Git Repo üôå.</p>\\n<p>There are other options out there. You can even crowd source your translations!\\nHowever, in our experience, if you‚Äôre going to be updating your site regularly\\nit pays to build a good working relationship with a translator. They will\\nunderstand your brand, and how to effectively communicate your tone of voice in\\na different language.</p>\\n<h2 id=\\\"choosing-a-package\\\"><a href=\\\"#choosing-a-package\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>Choosing a package</h2>\\n<p>There are a few React i18n packages out there. We considered\\n<a href=\\\"https://github.com/yahoo/react-intl\\\">react-intl</a> and the community\\n<a href=\\\"https://www.npmjs.com/package/gatsby-plugin-i18n\\\">Gatsby plugin</a>. However, we\\nopted for <a href=\\\"https://github.com/i18next/react-i18next/\\\">react-i18next</a> because we\\nuse a version of i18next in our core Meteor app, and our translators are\\nfamiliar with the system.\\n<a href=\\\"https://react.i18next.com/\\\">It‚Äôs well documented too</a>.</p>\\n<p>We also wanted to use a non-specific Gatsby solution so we can use a similar\\nimplementation in other projects.</p>\\n<p>To get started, you‚Äôll need to install a few packages:</p>\\n<p><code>npm i -S i18next i18next-xhr-backend i18next-browser-languagedetector react-i18next</code></p>\\n<h2 id=\\\"setting-up\\\"><a href=\\\"#setting-up\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>Setting up</h2>\\n<p>This is straight from the\\n<a href=\\\"https://react.i18next.com/components/i18next-instance.html\\\">i18n code examples</a>,\\nbut copied here for convenience. You‚Äôll need to create an i18n component and\\nimport it somewhere (we did it in our index layout):</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-jsx\\\"><code><span class=\\\"token keyword\\\">import</span> i18n <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">\\\"i18next\\\"</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token keyword\\\">import</span> Backend <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">\\\"i18next-xhr-backend\\\"</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token keyword\\\">import</span> LanguageDetector <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">\\\"i18next-browser-languagedetector\\\"</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token keyword\\\">import</span> <span class=\\\"token punctuation\\\">{</span> reactI18nextModule <span class=\\\"token punctuation\\\">}</span> <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">\\\"react-i18next\\\"</span><span class=\\\"token punctuation\\\">;</span>\\n\\ni18n\\n  <span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">use</span><span class=\\\"token punctuation\\\">(</span>Backend<span class=\\\"token punctuation\\\">)</span>\\n  <span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">use</span><span class=\\\"token punctuation\\\">(</span>LanguageDetector<span class=\\\"token punctuation\\\">)</span>\\n  <span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">use</span><span class=\\\"token punctuation\\\">(</span>reactI18nextModule<span class=\\\"token punctuation\\\">)</span>\\n  <span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">init</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">{</span>\\n    fallbackLng<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">\\\"en\\\"</span><span class=\\\"token punctuation\\\">,</span>\\n\\n    <span class=\\\"token comment\\\">// have a common namespace used around the full app</span>\\n    ns<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token punctuation\\\">[</span><span class=\\\"token string\\\">\\\"translations\\\"</span><span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">,</span>\\n    defaultNS<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">\\\"translations\\\"</span><span class=\\\"token punctuation\\\">,</span>\\n\\n    debug<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token boolean\\\">true</span><span class=\\\"token punctuation\\\">,</span>\\n\\n    interpolation<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token punctuation\\\">{</span>\\n      escapeValue<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token boolean\\\">false</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token comment\\\">// not needed for react!!</span>\\n    <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span>\\n\\n    react<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token punctuation\\\">{</span>\\n      wait<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token boolean\\\">true</span><span class=\\\"token punctuation\\\">,</span>\\n    <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span>\\n  <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token keyword\\\">export</span> <span class=\\\"token keyword\\\">default</span> i18n<span class=\\\"token punctuation\\\">;</span>\\n</code></pre>\\n      </div>\\n<h2 id=\\\"locales\\\"><a href=\\\"#locales\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>Locales</h2>\\n<p>Next we‚Äôll create a folder for our translation strings. We used a folder called\\nlocales in our src folder (react-i18next likes that!). Within the locales folder\\nwe create a folder for each language using the language code. Then within that\\nwe create a JSON file for each component we want to translate.</p>\\n<p>For our site we‚Äôre currently supporting English and Welsh, so our locales folder\\nlooks like this.</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-none\\\"><code>- src\\n\\t- locales\\n\\t\\t- en\\n\\t\\t\\t- PageHeader.json\\n\\t\\t\\t- PricingPlan.json\\n\\t\\t...\\n\\t\\t- cy\\n\\t\\t\\t- PageHeader.json\\n\\t\\t\\t- PricingPlan.json\\n\\t\\t...</code></pre>\\n      </div>\\n<p>The <code>PageHeader</code> component in the <code>en</code> folder might look like this:</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-json\\\"><code><span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token property\\\">\\\"heading\\\"</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">\\\"Shwmae, bonjour, and hola!\\\"</span><span class=\\\"token punctuation\\\">,</span>\\n  <span class=\\\"token property\\\">\\\"description\\\"</span><span class=\\\"token operator\\\">:</span>\\n    <span class=\\\"token string\\\">\\\"Available in English, Welsh, French, and Spanish, with more translations coming soon. doopoll is great for local, multi-lingual, and global organisations.\\\"</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n</code></pre>\\n      </div>\\n<p>And the <code>cy</code> component would look like this:</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-json\\\"><code><span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token property\\\">\\\"heading\\\"</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">\\\"Shwmae, bonjour, a hola!\\\"</span><span class=\\\"token punctuation\\\">,</span>\\n  <span class=\\\"token property\\\">\\\"description\\\"</span><span class=\\\"token operator\\\">:</span>\\n    <span class=\\\"token string\\\">\\\"Ar gael yn Saesneg, Cymraeg, Ffrangeg a Sbaeneg, gyda rhagor o gyfieithiadau'n dod yn fuan. Mae doopoll yn wych ar gyfer sefydliadau lleol, amlieithog a byd-eang.\\\"</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n</code></pre>\\n      </div>\\n<h3 id=\\\"tip-using-the-locales-folder-with-gatsby\\\"><a href=\\\"#tip-using-the-locales-folder-with-gatsby\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>TIP: Using the locales folder with Gatsby</h3>\\n<p>To get the locales folder into the right place for Gatsby we just need to add a\\nlittle hook to our <code>gatsby-node.js</code> file. It copies the locales folder post\\nbuild and gets everything in the right place:</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-javascript\\\"><code><span class=\\\"token keyword\\\">const</span> fs <span class=\\\"token operator\\\">=</span> <span class=\\\"token function\\\">require</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">\\\"fs-extra\\\"</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token keyword\\\">const</span> path <span class=\\\"token operator\\\">=</span> <span class=\\\"token function\\\">require</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">\\\"path\\\"</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n\\nexports<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function-variable function\\\">onPostBuild</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token punctuation\\\">{</span>\\n  console<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">log</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">\\\"Copying locales\\\"</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n  fs<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">copySync</span><span class=\\\"token punctuation\\\">(</span>\\n    path<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">join</span><span class=\\\"token punctuation\\\">(</span>__dirname<span class=\\\"token punctuation\\\">,</span> <span class=\\\"token string\\\">\\\"/src/locales\\\"</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">,</span>\\n    path<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">join</span><span class=\\\"token punctuation\\\">(</span>__dirname<span class=\\\"token punctuation\\\">,</span> <span class=\\\"token string\\\">\\\"/public/locales\\\"</span><span class=\\\"token punctuation\\\">)</span>\\n  <span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">;</span>\\n</code></pre>\\n      </div>\\n<h2 id=\\\"using-with-a-component\\\"><a href=\\\"#using-with-a-component\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>Using with a component</h2>\\n<p>With the packages installed and locales setup, we‚Äôre ready to wire up a\\ncomponent!</p>\\n<p>React-i18next uses a HOC to wrap your component and provide some props to handle\\nlanguage switching. Here‚Äôs our <code>PageHeader</code> component:</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-jsx\\\"><code><span class=\\\"token keyword\\\">import</span> React<span class=\\\"token punctuation\\\">,</span> <span class=\\\"token punctuation\\\">{</span> Component <span class=\\\"token punctuation\\\">}</span> <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">\\\"react\\\"</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token keyword\\\">import</span> <span class=\\\"token punctuation\\\">{</span> translate <span class=\\\"token punctuation\\\">}</span> <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">\\\"react-i18next\\\"</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token keyword\\\">class</span> <span class=\\\"token class-name\\\">PageHeader</span> <span class=\\\"token keyword\\\">extends</span> <span class=\\\"token class-name\\\">Component</span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token function\\\">render</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token keyword\\\">const</span> <span class=\\\"token punctuation\\\">{</span> t <span class=\\\"token punctuation\\\">}</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span>props<span class=\\\"token punctuation\\\">;</span>\\n\\n    <span class=\\\"token keyword\\\">return</span> <span class=\\\"token punctuation\\\">(</span>\\n      <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>div</span> <span class=\\\"token attr-name\\\">className</span><span class=\\\"token attr-value\\\"><span class=\\\"token punctuation\\\">=</span><span class=\\\"token punctuation\\\">\\\"</span>PageHeader<span class=\\\"token punctuation\\\">\\\"</span></span><span class=\\\"token punctuation\\\">></span></span>\\n        <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>h2</span><span class=\\\"token punctuation\\\">></span></span><span class=\\\"token punctuation\\\">{</span><span class=\\\"token function\\\">t</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">\\\"heading\\\"</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">}</span><span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span>h2</span><span class=\\\"token punctuation\\\">></span></span>\\n        <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>p</span><span class=\\\"token punctuation\\\">></span></span><span class=\\\"token punctuation\\\">{</span><span class=\\\"token function\\\">t</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">\\\"description\\\"</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">}</span><span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span>p</span><span class=\\\"token punctuation\\\">></span></span>\\n      <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span>div</span><span class=\\\"token punctuation\\\">></span></span>\\n    <span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token punctuation\\\">}</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n\\n<span class=\\\"token keyword\\\">export</span> <span class=\\\"token keyword\\\">default</span> <span class=\\\"token function\\\">translate</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">\\\"PageHeader\\\"</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">(</span>PageHeader<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n</code></pre>\\n      </div>\\n<p>Pretty simple! The string provided to <code>translate</code> is the corresponding JSON file\\nname for the translation, and the second instance is the component itself. We\\nkeep these names the same to make it easier to match up translation files and\\ncomponents.</p>\\n<h3 id=\\\"tip-react-helmet\\\"><a href=\\\"#tip-react-helmet\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>TIP: React Helmet</h3>\\n<p>You can also use translation strings for page titles! Here‚Äôs an example with\\nReact Helmet:</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-jsx\\\"><code><span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>div</span> <span class=\\\"token attr-name\\\">className</span><span class=\\\"token attr-value\\\"><span class=\\\"token punctuation\\\">=</span><span class=\\\"token punctuation\\\">\\\"</span>Pricing<span class=\\\"token punctuation\\\">\\\"</span></span><span class=\\\"token punctuation\\\">></span></span>\\n\\t<span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>Helmet</span> <span class=\\\"token attr-name\\\">title</span><span class=\\\"token script language-javascript\\\"><span class=\\\"token punctuation\\\">=</span><span class=\\\"token punctuation\\\">{</span><span class=\\\"token function\\\">t</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'heading'</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">}</span></span><span class=\\\"token punctuation\\\">></span></span>\\n<span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span>div</span><span class=\\\"token punctuation\\\">></span></span>\\n</code></pre>\\n      </div>\\n<h2 id=\\\"switching-languages\\\"><a href=\\\"#switching-languages\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>Switching Languages</h2>\\n<p>Finally, to make it easy for our users to switch language we need to create a\\nlittle component. Here‚Äôs an example from our site:</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-jsx\\\"><code><span class=\\\"token keyword\\\">import</span> React<span class=\\\"token punctuation\\\">,</span> <span class=\\\"token punctuation\\\">{</span> Component <span class=\\\"token punctuation\\\">}</span> <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">\\\"react\\\"</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token keyword\\\">import</span> classNames <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">\\\"classnames\\\"</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token keyword\\\">import</span> <span class=\\\"token punctuation\\\">{</span> translate <span class=\\\"token punctuation\\\">}</span> <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">\\\"react-i18next\\\"</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token keyword\\\">class</span> <span class=\\\"token class-name\\\">LanguageSwitcher</span> <span class=\\\"token keyword\\\">extends</span> <span class=\\\"token class-name\\\">Component</span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token function\\\">constructor</span><span class=\\\"token punctuation\\\">(</span>props<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token keyword\\\">super</span><span class=\\\"token punctuation\\\">(</span>props<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token keyword\\\">const</span> <span class=\\\"token punctuation\\\">{</span> i18n <span class=\\\"token punctuation\\\">}</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span>props<span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span>state <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">{</span> language<span class=\\\"token punctuation\\\">:</span> i18n<span class=\\\"token punctuation\\\">.</span>language <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">;</span>\\n\\n    <span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span>handleChangeLanguage <span class=\\\"token operator\\\">=</span> <span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span>handleChangeLanguage<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">bind</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token punctuation\\\">}</span>\\n\\n  <span class=\\\"token function\\\">componentWillReceiveProps</span><span class=\\\"token punctuation\\\">(</span>nextProps<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">setState</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">{</span> language<span class=\\\"token punctuation\\\">:</span> nextProps<span class=\\\"token punctuation\\\">.</span>i18n<span class=\\\"token punctuation\\\">.</span>language <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token punctuation\\\">}</span>\\n\\n  <span class=\\\"token function\\\">handleChangeLanguage</span><span class=\\\"token punctuation\\\">(</span>lng<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token keyword\\\">const</span> <span class=\\\"token punctuation\\\">{</span> i18n <span class=\\\"token punctuation\\\">}</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span>props<span class=\\\"token punctuation\\\">;</span>\\n    i18n<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">changeLanguage</span><span class=\\\"token punctuation\\\">(</span>lng<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token punctuation\\\">}</span>\\n\\n  <span class=\\\"token function\\\">renderLanguageChoice</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">{</span> code<span class=\\\"token punctuation\\\">,</span> label <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token keyword\\\">const</span> buttonClass <span class=\\\"token operator\\\">=</span> <span class=\\\"token function\\\">classNames</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">\\\"LanguageSwitcher__button\\\"</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token punctuation\\\">{</span>\\n      <span class=\\\"token string\\\">\\\"LanguageSwitcher__button--selected\\\"</span><span class=\\\"token punctuation\\\">:</span> <span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span>state<span class=\\\"token punctuation\\\">.</span>language <span class=\\\"token operator\\\">===</span> code<span class=\\\"token punctuation\\\">,</span>\\n    <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n\\n    <span class=\\\"token keyword\\\">return</span> <span class=\\\"token punctuation\\\">(</span>\\n      <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>button</span>\\n        <span class=\\\"token attr-name\\\">key</span><span class=\\\"token script language-javascript\\\"><span class=\\\"token punctuation\\\">=</span><span class=\\\"token punctuation\\\">{</span>code<span class=\\\"token punctuation\\\">}</span></span>\\n        <span class=\\\"token attr-name\\\">className</span><span class=\\\"token script language-javascript\\\"><span class=\\\"token punctuation\\\">=</span><span class=\\\"token punctuation\\\">{</span>buttonClass<span class=\\\"token punctuation\\\">}</span></span>\\n        <span class=\\\"token attr-name\\\">onClick</span><span class=\\\"token script language-javascript\\\"><span class=\\\"token punctuation\\\">=</span><span class=\\\"token punctuation\\\">{</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">handleChangeLanguage</span><span class=\\\"token punctuation\\\">(</span>code<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">}</span></span>\\n      <span class=\\\"token punctuation\\\">></span></span>\\n        <span class=\\\"token punctuation\\\">{</span>label<span class=\\\"token punctuation\\\">}</span>\\n      <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span>button</span><span class=\\\"token punctuation\\\">></span></span>\\n    <span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token punctuation\\\">}</span>\\n\\n  <span class=\\\"token function\\\">render</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token keyword\\\">const</span> languages <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">[</span>\\n      <span class=\\\"token punctuation\\\">{</span> code<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">\\\"en\\\"</span><span class=\\\"token punctuation\\\">,</span> label<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">\\\"English\\\"</span> <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span>\\n      <span class=\\\"token punctuation\\\">{</span> code<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">\\\"cy\\\"</span><span class=\\\"token punctuation\\\">,</span> label<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">\\\"Cymraeg\\\"</span> <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span>\\n    <span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">;</span>\\n\\n    <span class=\\\"token keyword\\\">return</span> <span class=\\\"token punctuation\\\">(</span>\\n      <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>div</span> <span class=\\\"token attr-name\\\">className</span><span class=\\\"token attr-value\\\"><span class=\\\"token punctuation\\\">=</span><span class=\\\"token punctuation\\\">\\\"</span>LanguageSwitcher<span class=\\\"token punctuation\\\">\\\"</span></span><span class=\\\"token punctuation\\\">></span></span>\\n        <span class=\\\"token punctuation\\\">{</span>languages<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">map</span><span class=\\\"token punctuation\\\">(</span>language <span class=\\\"token operator\\\">=></span> <span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">renderLanguageChoice</span><span class=\\\"token punctuation\\\">(</span>language<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">}</span>\\n      <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span>div</span><span class=\\\"token punctuation\\\">></span></span>\\n    <span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token punctuation\\\">}</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n\\n<span class=\\\"token keyword\\\">export</span> <span class=\\\"token keyword\\\">default</span> <span class=\\\"token function\\\">translate</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">\\\"LanguageSwitcher\\\"</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">(</span>LanguageSwitcher<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n</code></pre>\\n      </div>\\n<p>This is a pretty simple component. We‚Äôre setting the <code>language</code> state based on\\nthe i18n prop so that we can check which language is currently active and show\\nthat in our menu.</p>\\n<p>The <code>handleLanguageChange</code> function just wraps the <code>react-i18n</code> function passed\\nin as a prop through <code>translate</code>. Pretty much everything is handled for us.\\nHooray! üéâ</p>\\n<h2 id=\\\"finishing-up\\\"><a href=\\\"#finishing-up\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>Finishing up</h2>\\n<p>As you can see, i18n in Gatsby is actually pretty simple when you know how! We\\nhad to work a few things out for ourselves (the locales folder being one of\\nthem!), so hopefully reading this will allow you to get started serving\\ninternational users even quicker.</p>\",\"excerpt\":\"Languages are a key part of who we are; they are an expression of our identity.\\nServing users content in their own language is a powerful‚Ä¶\",\"timeToRead\":7,\"fields\":{\"slug\":\"/blog/2017-10-17-building-i18n-with-gatsby/\"},\"frontmatter\":{\"excerpt\":null,\"image\":null,\"date\":\"October 17th 2017\",\"rawDate\":\"2017-10-17T00:00:00.000Z\",\"canonicalLink\":null,\"publishedAt\":null,\"title\":\"Building i18n with Gatsby\",\"imageAuthor\":null,\"imageAuthorLink\":null,\"imageTitle\":null,\"showImageInArticle\":null,\"author\":{\"id\":\"Samuel Goudie\",\"bio\":\"Cofounder & Head of Product at https://doopoll.co\",\"twitter\":\"@sgoudie\",\"avatar\":{\"childImageSharp\":{\"resolutions\":{\"tracedSVG\":\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='63' height='63' viewBox='0 0 63 63'%3E%3Crect width='100%25' height='100%25' fill='%23f6f2f8'/%3E%3Cpath d='M24 8c-2.6 1.2-5 3.1-5.7 4.6-1.3 2.9-.6 16 1 17 .4.4.7-.2.6-1.2-.3-2.3 2-10.4 3.3-12.1 1.2-1.5 11.5-1.7 15.2-.3 2.6 1 4.5 5.7 4.7 11.5 0 2.8 0 2.9 1 .8 1.4-2.7-1.4-18-3.6-20.2-2.2-2.3-11.3-2.3-16.5 0m1.5 18c-.4.5-1 .7-1.6.4-.5-.4-.9-.2-.9.3 0 1.3 2.7 2.3 4.5 1.6.8-.4 1.5-1.2 1.5-2 0-1.6-2.6-1.9-3.5-.4m9 .1c-.7 1 1 2.9 2.5 2.9.3 0 1.1-.4 1.9-.9 1.7-1.1.5-3.1-1.9-3.1-1 0-2.2.5-2.6 1.1m-9.4 9a8.4 8.4 0 0 0-.5 4.9c.5 2.5 1 2.8 3.7 2.5 1.7-.3 3.3-.7 3.6-1 .2-.2 1.3 0 2.3.5 1.2.7 2 .7 2.4 0 .4-.6 1-.8 1.5-.5.4.3 1-1 1.2-2.9.3-2.5-.1-3.7-1.4-4.5-1.1-.7-1.8-.7-1.8-.1 0 .5-.5 1-1 1-.6 0-.8-.5-.4-1 .8-1.5-4.8-1-5.8.5-1.4 2-.8 2.4 2.4 2 1.8-.3 2.7-.2 2 .1-1.2.5-1.2.8 0 1.5.9.6.3.9-2 .9-3.2 0-5.4-2.3-4.5-4.8.7-2-.5-1.4-1.7.9m15.4 8.2c-.3 1-1.2 1.7-2 1.7-.7 0-1.5.9-1.9 2-.9 2.8-8.2 2.4-11.2-.7-1.9-2-3.2-2.3-8.6-2.3h-6.4l-.8 5.3C9 52 8.7 54.8 8.8 55c0 .3-1.1 1.2-2.6 2C2.8 58.8 0 61 0 62c0 .5 6.6.9 14.7.9 14.5 0 14.6 0 12.8-2-1-1.1-1.3-2-.7-2 1.5 0 1.6-3.6.2-4.5a2 2 0 0 1-1-1.7c0-.6 1-.3 2.4.6 2.4 1.5 2.7 1.4 7-1.8l4.4-3.4 1 2.4c1.5 3.1 1.5 4.4.1 2.4-.8-1.2-.9-1-.4 1s.4 2.2-.4 1c-.6-.8-1.1-1-1.2-.5l-.3 2.3c0 .7-.7 1.7-1.5 2.1-.8.5-1.1 1.6-.8 2.5.7 1.8 26 2.5 27.1.7 1.3-2-.8-4-6-6.1C54 54.6 52 53.2 52 52c0-1.3-.2-1.3-.9-.3-1.6 2.6-4.5.7-7.3-4.8-2-4.1-2.9-5-3.4-3.7M11 48.5c0 2 .4 3.5 1 3.5l2.4.6c1 .4 1.5.2 1.3-.7-.2-.8-.2-1.1 0-.7.5.8 5.3-4 5.3-5.2 0-.6-2.3-1-5-1h-5v3.5' fill='%23e0d6eb' fill-rule='evenodd'/%3E%3C/svg%3E\",\"width\":63,\"height\":63,\"src\":\"/gatsby_cn/static/samuel-goudie-dc6e5869628527325f591d179bce7bc7-4a2e8.jpg\",\"srcSet\":\"/gatsby_cn/static/samuel-goudie-dc6e5869628527325f591d179bce7bc7-4a2e8.jpg 1x,\\n/gatsby_cn/static/samuel-goudie-dc6e5869628527325f591d179bce7bc7-53944.jpg 1.5x,\\n/gatsby_cn/static/samuel-goudie-dc6e5869628527325f591d179bce7bc7-bd4ff.jpg 2x,\\n/gatsby_cn/static/samuel-goudie-dc6e5869628527325f591d179bce7bc7-6257f.jpg 3x\"}}},\"fields\":{\"slug\":\"/contributors/samuel-goudie/\"}}}}},\"pathContext\":{\"slug\":\"/blog/2017-10-17-building-i18n-with-gatsby/\",\"prev\":{\"fields\":{\"slug\":\"/blog/2017-10-16-making-website-building-fun/\",\"package\":null},\"frontmatter\":{\"title\":\"Making website building fun\",\"draft\":null,\"canonicalLink\":null,\"publishedAt\":null}},\"next\":{\"fields\":{\"slug\":\"/blog/2017-10-20-from-wordpress-to-developing-in-react-starting-to-see-it/\",\"package\":null},\"frontmatter\":{\"title\":\"From WordPress to Developing in React ‚Äî Starting to See It\",\"draft\":null,\"canonicalLink\":null,\"publishedAt\":null}}}}\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// path---blog-2017-10-17-building-i-18-n-with-gatsby-3dd18c7d9d0fb69570c9.js","module.exports = {\"data\":{\"markdownRemark\":{\"html\":\"<p>Languages are a key part of who we are; they are an expression of our identity.\\nServing users content in their own language is a powerful thing, and it allows\\nyou to include nuances and specific cultural references in a way Google\\nTranslate just wouldn‚Äôt allow.</p>\\n<p>When we were looking for a new framework for the new\\n<a href=\\\"https://doopoll.co\\\">doopoll</a> marketing site, we knew we‚Äôd want to support i18n\\nfrom the start.</p>\\n<p>We were wowed with Gatsby‚Äôs simplicity and speed, but couldn‚Äôt find any clear\\nprocess for supporting i18n. With a little bit of digging and experimenting,\\nwe‚Äôve found that it‚Äôs just as easy as the rest of the process.</p>\\n<p>Here is how we set up i18n for our Gatsby marketing site, and a few tips along\\nthe way.</p>\\n<hr>\\n<h2 id=\\\"quick-intro-to-i18n\\\"><a href=\\\"#quick-intro-to-i18n\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>Quick intro to i18n</h2>\\n<p>Just in case you‚Äôre new to i18n, don‚Äôt worry, it‚Äôs pretty simple! All we do is\\ntake hard-coded strings like ‚ÄúHello‚Äù and replace them with a variable so that\\nwhen the language changes, so does the string.</p>\\n<p>So for example rather than write <code>&#x3C;h1>Hello&#x3C;/h1></code>. I might write\\n<code>&#x3C;h1>{t(hello)}</code> (more on this later), and the user would see ‚ÄòHello‚Äô,\\n‚ÄòBonjour‚Äô, or ‚ÄòHola‚Äô depending on what language they had switched to, and\\nwhether we‚Äôd added a translation for it.</p>\\n<h3 id=\\\"tip-a-quick-note-on-language-codes\\\"><a href=\\\"#tip-a-quick-note-on-language-codes\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>TIP: A quick note on language codes</h3>\\n<p><a href=\\\"https://www.science.co.il/language/Codes.php\\\">Each language has a unique code</a>.\\nWe use this code to reference a language in our code. If you see a hyphen and\\nthen some letters after it, they refer to the locale. So for example:</p>\\n<p>en = English cy = Welsh es = Spanish en-GB = British English en-US = American\\nEnglish</p>\\n<p>The locale allows us to make changes to spelling (for example, ‚Äúcolour‚Äù vs.\\n‚Äúcolor‚Äù), but can also be used for other functions such as currency.</p>\\n<h2 id=\\\"working-with-translators\\\"><a href=\\\"#working-with-translators\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>Working with translators</h2>\\n<p>At doopoll we speak multiple languages, but just like design, development, and\\ncopywriting, translation requires time and skill to get it right. That‚Äôs why we\\nwork with our awesome friends at <a href=\\\"https://applingua.com/\\\">Applingua</a> who handle\\nall of our translation, and push new strings straight to our Git Repo üôå.</p>\\n<p>There are other options out there. You can even crowd source your translations!\\nHowever, in our experience, if you‚Äôre going to be updating your site regularly\\nit pays to build a good working relationship with a translator. They will\\nunderstand your brand, and how to effectively communicate your tone of voice in\\na different language.</p>\\n<h2 id=\\\"choosing-a-package\\\"><a href=\\\"#choosing-a-package\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>Choosing a package</h2>\\n<p>There are a few React i18n packages out there. We considered\\n<a href=\\\"https://github.com/yahoo/react-intl\\\">react-intl</a> and the community\\n<a href=\\\"https://www.npmjs.com/package/gatsby-plugin-i18n\\\">Gatsby plugin</a>. However, we\\nopted for <a href=\\\"https://github.com/i18next/react-i18next/\\\">react-i18next</a> because we\\nuse a version of i18next in our core Meteor app, and our translators are\\nfamiliar with the system.\\n<a href=\\\"https://react.i18next.com/\\\">It‚Äôs well documented too</a>.</p>\\n<p>We also wanted to use a non-specific Gatsby solution so we can use a similar\\nimplementation in other projects.</p>\\n<p>To get started, you‚Äôll need to install a few packages:</p>\\n<p><code>npm i -S i18next i18next-xhr-backend i18next-browser-languagedetector react-i18next</code></p>\\n<h2 id=\\\"setting-up\\\"><a href=\\\"#setting-up\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>Setting up</h2>\\n<p>This is straight from the\\n<a href=\\\"https://react.i18next.com/components/i18next-instance.html\\\">i18n code examples</a>,\\nbut copied here for convenience. You‚Äôll need to create an i18n component and\\nimport it somewhere (we did it in our index layout):</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-jsx\\\"><code><span class=\\\"token keyword\\\">import</span> i18n <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">\\\"i18next\\\"</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token keyword\\\">import</span> Backend <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">\\\"i18next-xhr-backend\\\"</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token keyword\\\">import</span> LanguageDetector <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">\\\"i18next-browser-languagedetector\\\"</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token keyword\\\">import</span> <span class=\\\"token punctuation\\\">{</span> reactI18nextModule <span class=\\\"token punctuation\\\">}</span> <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">\\\"react-i18next\\\"</span><span class=\\\"token punctuation\\\">;</span>\\n\\ni18n\\n  <span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">use</span><span class=\\\"token punctuation\\\">(</span>Backend<span class=\\\"token punctuation\\\">)</span>\\n  <span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">use</span><span class=\\\"token punctuation\\\">(</span>LanguageDetector<span class=\\\"token punctuation\\\">)</span>\\n  <span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">use</span><span class=\\\"token punctuation\\\">(</span>reactI18nextModule<span class=\\\"token punctuation\\\">)</span>\\n  <span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">init</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">{</span>\\n    fallbackLng<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">\\\"en\\\"</span><span class=\\\"token punctuation\\\">,</span>\\n\\n    <span class=\\\"token comment\\\">// have a common namespace used around the full app</span>\\n    ns<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token punctuation\\\">[</span><span class=\\\"token string\\\">\\\"translations\\\"</span><span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">,</span>\\n    defaultNS<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">\\\"translations\\\"</span><span class=\\\"token punctuation\\\">,</span>\\n\\n    debug<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token boolean\\\">true</span><span class=\\\"token punctuation\\\">,</span>\\n\\n    interpolation<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token punctuation\\\">{</span>\\n      escapeValue<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token boolean\\\">false</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token comment\\\">// not needed for react!!</span>\\n    <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span>\\n\\n    react<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token punctuation\\\">{</span>\\n      wait<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token boolean\\\">true</span><span class=\\\"token punctuation\\\">,</span>\\n    <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span>\\n  <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token keyword\\\">export</span> <span class=\\\"token keyword\\\">default</span> i18n<span class=\\\"token punctuation\\\">;</span>\\n</code></pre>\\n      </div>\\n<h2 id=\\\"locales\\\"><a href=\\\"#locales\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>Locales</h2>\\n<p>Next we‚Äôll create a folder for our translation strings. We used a folder called\\nlocales in our src folder (react-i18next likes that!). Within the locales folder\\nwe create a folder for each language using the language code. Then within that\\nwe create a JSON file for each component we want to translate.</p>\\n<p>For our site we‚Äôre currently supporting English and Welsh, so our locales folder\\nlooks like this.</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-none\\\"><code>- src\\n\\t- locales\\n\\t\\t- en\\n\\t\\t\\t- PageHeader.json\\n\\t\\t\\t- PricingPlan.json\\n\\t\\t...\\n\\t\\t- cy\\n\\t\\t\\t- PageHeader.json\\n\\t\\t\\t- PricingPlan.json\\n\\t\\t...</code></pre>\\n      </div>\\n<p>The <code>PageHeader</code> component in the <code>en</code> folder might look like this:</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-json\\\"><code><span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token property\\\">\\\"heading\\\"</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">\\\"Shwmae, bonjour, and hola!\\\"</span><span class=\\\"token punctuation\\\">,</span>\\n  <span class=\\\"token property\\\">\\\"description\\\"</span><span class=\\\"token operator\\\">:</span>\\n    <span class=\\\"token string\\\">\\\"Available in English, Welsh, French, and Spanish, with more translations coming soon. doopoll is great for local, multi-lingual, and global organisations.\\\"</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n</code></pre>\\n      </div>\\n<p>And the <code>cy</code> component would look like this:</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-json\\\"><code><span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token property\\\">\\\"heading\\\"</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">\\\"Shwmae, bonjour, a hola!\\\"</span><span class=\\\"token punctuation\\\">,</span>\\n  <span class=\\\"token property\\\">\\\"description\\\"</span><span class=\\\"token operator\\\">:</span>\\n    <span class=\\\"token string\\\">\\\"Ar gael yn Saesneg, Cymraeg, Ffrangeg a Sbaeneg, gyda rhagor o gyfieithiadau'n dod yn fuan. Mae doopoll yn wych ar gyfer sefydliadau lleol, amlieithog a byd-eang.\\\"</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n</code></pre>\\n      </div>\\n<h3 id=\\\"tip-using-the-locales-folder-with-gatsby\\\"><a href=\\\"#tip-using-the-locales-folder-with-gatsby\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>TIP: Using the locales folder with Gatsby</h3>\\n<p>To get the locales folder into the right place for Gatsby we just need to add a\\nlittle hook to our <code>gatsby-node.js</code> file. It copies the locales folder post\\nbuild and gets everything in the right place:</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-javascript\\\"><code><span class=\\\"token keyword\\\">const</span> fs <span class=\\\"token operator\\\">=</span> <span class=\\\"token function\\\">require</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">\\\"fs-extra\\\"</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token keyword\\\">const</span> path <span class=\\\"token operator\\\">=</span> <span class=\\\"token function\\\">require</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">\\\"path\\\"</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n\\nexports<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function-variable function\\\">onPostBuild</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token punctuation\\\">{</span>\\n  console<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">log</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">\\\"Copying locales\\\"</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n  fs<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">copySync</span><span class=\\\"token punctuation\\\">(</span>\\n    path<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">join</span><span class=\\\"token punctuation\\\">(</span>__dirname<span class=\\\"token punctuation\\\">,</span> <span class=\\\"token string\\\">\\\"/src/locales\\\"</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">,</span>\\n    path<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">join</span><span class=\\\"token punctuation\\\">(</span>__dirname<span class=\\\"token punctuation\\\">,</span> <span class=\\\"token string\\\">\\\"/public/locales\\\"</span><span class=\\\"token punctuation\\\">)</span>\\n  <span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">;</span>\\n</code></pre>\\n      </div>\\n<h2 id=\\\"using-with-a-component\\\"><a href=\\\"#using-with-a-component\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>Using with a component</h2>\\n<p>With the packages installed and locales setup, we‚Äôre ready to wire up a\\ncomponent!</p>\\n<p>React-i18next uses a HOC to wrap your component and provide some props to handle\\nlanguage switching. Here‚Äôs our <code>PageHeader</code> component:</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-jsx\\\"><code><span class=\\\"token keyword\\\">import</span> React<span class=\\\"token punctuation\\\">,</span> <span class=\\\"token punctuation\\\">{</span> Component <span class=\\\"token punctuation\\\">}</span> <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">\\\"react\\\"</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token keyword\\\">import</span> <span class=\\\"token punctuation\\\">{</span> translate <span class=\\\"token punctuation\\\">}</span> <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">\\\"react-i18next\\\"</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token keyword\\\">class</span> <span class=\\\"token class-name\\\">PageHeader</span> <span class=\\\"token keyword\\\">extends</span> <span class=\\\"token class-name\\\">Component</span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token function\\\">render</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token keyword\\\">const</span> <span class=\\\"token punctuation\\\">{</span> t <span class=\\\"token punctuation\\\">}</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span>props<span class=\\\"token punctuation\\\">;</span>\\n\\n    <span class=\\\"token keyword\\\">return</span> <span class=\\\"token punctuation\\\">(</span>\\n      <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>div</span> <span class=\\\"token attr-name\\\">className</span><span class=\\\"token attr-value\\\"><span class=\\\"token punctuation\\\">=</span><span class=\\\"token punctuation\\\">\\\"</span>PageHeader<span class=\\\"token punctuation\\\">\\\"</span></span><span class=\\\"token punctuation\\\">></span></span>\\n        <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>h2</span><span class=\\\"token punctuation\\\">></span></span><span class=\\\"token punctuation\\\">{</span><span class=\\\"token function\\\">t</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">\\\"heading\\\"</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">}</span><span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span>h2</span><span class=\\\"token punctuation\\\">></span></span>\\n        <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>p</span><span class=\\\"token punctuation\\\">></span></span><span class=\\\"token punctuation\\\">{</span><span class=\\\"token function\\\">t</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">\\\"description\\\"</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">}</span><span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span>p</span><span class=\\\"token punctuation\\\">></span></span>\\n      <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span>div</span><span class=\\\"token punctuation\\\">></span></span>\\n    <span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token punctuation\\\">}</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n\\n<span class=\\\"token keyword\\\">export</span> <span class=\\\"token keyword\\\">default</span> <span class=\\\"token function\\\">translate</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">\\\"PageHeader\\\"</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">(</span>PageHeader<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n</code></pre>\\n      </div>\\n<p>Pretty simple! The string provided to <code>translate</code> is the corresponding JSON file\\nname for the translation, and the second instance is the component itself. We\\nkeep these names the same to make it easier to match up translation files and\\ncomponents.</p>\\n<h3 id=\\\"tip-react-helmet\\\"><a href=\\\"#tip-react-helmet\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>TIP: React Helmet</h3>\\n<p>You can also use translation strings for page titles! Here‚Äôs an example with\\nReact Helmet:</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-jsx\\\"><code><span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>div</span> <span class=\\\"token attr-name\\\">className</span><span class=\\\"token attr-value\\\"><span class=\\\"token punctuation\\\">=</span><span class=\\\"token punctuation\\\">\\\"</span>Pricing<span class=\\\"token punctuation\\\">\\\"</span></span><span class=\\\"token punctuation\\\">></span></span>\\n\\t<span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>Helmet</span> <span class=\\\"token attr-name\\\">title</span><span class=\\\"token script language-javascript\\\"><span class=\\\"token punctuation\\\">=</span><span class=\\\"token punctuation\\\">{</span><span class=\\\"token function\\\">t</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'heading'</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">}</span></span><span class=\\\"token punctuation\\\">></span></span>\\n<span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span>div</span><span class=\\\"token punctuation\\\">></span></span>\\n</code></pre>\\n      </div>\\n<h2 id=\\\"switching-languages\\\"><a href=\\\"#switching-languages\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>Switching Languages</h2>\\n<p>Finally, to make it easy for our users to switch language we need to create a\\nlittle component. Here‚Äôs an example from our site:</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-jsx\\\"><code><span class=\\\"token keyword\\\">import</span> React<span class=\\\"token punctuation\\\">,</span> <span class=\\\"token punctuation\\\">{</span> Component <span class=\\\"token punctuation\\\">}</span> <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">\\\"react\\\"</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token keyword\\\">import</span> classNames <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">\\\"classnames\\\"</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token keyword\\\">import</span> <span class=\\\"token punctuation\\\">{</span> translate <span class=\\\"token punctuation\\\">}</span> <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">\\\"react-i18next\\\"</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token keyword\\\">class</span> <span class=\\\"token class-name\\\">LanguageSwitcher</span> <span class=\\\"token keyword\\\">extends</span> <span class=\\\"token class-name\\\">Component</span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token function\\\">constructor</span><span class=\\\"token punctuation\\\">(</span>props<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token keyword\\\">super</span><span class=\\\"token punctuation\\\">(</span>props<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token keyword\\\">const</span> <span class=\\\"token punctuation\\\">{</span> i18n <span class=\\\"token punctuation\\\">}</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span>props<span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span>state <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">{</span> language<span class=\\\"token punctuation\\\">:</span> i18n<span class=\\\"token punctuation\\\">.</span>language <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">;</span>\\n\\n    <span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span>handleChangeLanguage <span class=\\\"token operator\\\">=</span> <span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span>handleChangeLanguage<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">bind</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token punctuation\\\">}</span>\\n\\n  <span class=\\\"token function\\\">componentWillReceiveProps</span><span class=\\\"token punctuation\\\">(</span>nextProps<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">setState</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">{</span> language<span class=\\\"token punctuation\\\">:</span> nextProps<span class=\\\"token punctuation\\\">.</span>i18n<span class=\\\"token punctuation\\\">.</span>language <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token punctuation\\\">}</span>\\n\\n  <span class=\\\"token function\\\">handleChangeLanguage</span><span class=\\\"token punctuation\\\">(</span>lng<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token keyword\\\">const</span> <span class=\\\"token punctuation\\\">{</span> i18n <span class=\\\"token punctuation\\\">}</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span>props<span class=\\\"token punctuation\\\">;</span>\\n    i18n<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">changeLanguage</span><span class=\\\"token punctuation\\\">(</span>lng<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token punctuation\\\">}</span>\\n\\n  <span class=\\\"token function\\\">renderLanguageChoice</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">{</span> code<span class=\\\"token punctuation\\\">,</span> label <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token keyword\\\">const</span> buttonClass <span class=\\\"token operator\\\">=</span> <span class=\\\"token function\\\">classNames</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">\\\"LanguageSwitcher__button\\\"</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token punctuation\\\">{</span>\\n      <span class=\\\"token string\\\">\\\"LanguageSwitcher__button--selected\\\"</span><span class=\\\"token punctuation\\\">:</span> <span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span>state<span class=\\\"token punctuation\\\">.</span>language <span class=\\\"token operator\\\">===</span> code<span class=\\\"token punctuation\\\">,</span>\\n    <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n\\n    <span class=\\\"token keyword\\\">return</span> <span class=\\\"token punctuation\\\">(</span>\\n      <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>button</span>\\n        <span class=\\\"token attr-name\\\">key</span><span class=\\\"token script language-javascript\\\"><span class=\\\"token punctuation\\\">=</span><span class=\\\"token punctuation\\\">{</span>code<span class=\\\"token punctuation\\\">}</span></span>\\n        <span class=\\\"token attr-name\\\">className</span><span class=\\\"token script language-javascript\\\"><span class=\\\"token punctuation\\\">=</span><span class=\\\"token punctuation\\\">{</span>buttonClass<span class=\\\"token punctuation\\\">}</span></span>\\n        <span class=\\\"token attr-name\\\">onClick</span><span class=\\\"token script language-javascript\\\"><span class=\\\"token punctuation\\\">=</span><span class=\\\"token punctuation\\\">{</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">handleChangeLanguage</span><span class=\\\"token punctuation\\\">(</span>code<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">}</span></span>\\n      <span class=\\\"token punctuation\\\">></span></span>\\n        <span class=\\\"token punctuation\\\">{</span>label<span class=\\\"token punctuation\\\">}</span>\\n      <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span>button</span><span class=\\\"token punctuation\\\">></span></span>\\n    <span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token punctuation\\\">}</span>\\n\\n  <span class=\\\"token function\\\">render</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token keyword\\\">const</span> languages <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">[</span>\\n      <span class=\\\"token punctuation\\\">{</span> code<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">\\\"en\\\"</span><span class=\\\"token punctuation\\\">,</span> label<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">\\\"English\\\"</span> <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span>\\n      <span class=\\\"token punctuation\\\">{</span> code<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">\\\"cy\\\"</span><span class=\\\"token punctuation\\\">,</span> label<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">\\\"Cymraeg\\\"</span> <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span>\\n    <span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">;</span>\\n\\n    <span class=\\\"token keyword\\\">return</span> <span class=\\\"token punctuation\\\">(</span>\\n      <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>div</span> <span class=\\\"token attr-name\\\">className</span><span class=\\\"token attr-value\\\"><span class=\\\"token punctuation\\\">=</span><span class=\\\"token punctuation\\\">\\\"</span>LanguageSwitcher<span class=\\\"token punctuation\\\">\\\"</span></span><span class=\\\"token punctuation\\\">></span></span>\\n        <span class=\\\"token punctuation\\\">{</span>languages<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">map</span><span class=\\\"token punctuation\\\">(</span>language <span class=\\\"token operator\\\">=></span> <span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">renderLanguageChoice</span><span class=\\\"token punctuation\\\">(</span>language<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">}</span>\\n      <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span>div</span><span class=\\\"token punctuation\\\">></span></span>\\n    <span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token punctuation\\\">}</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n\\n<span class=\\\"token keyword\\\">export</span> <span class=\\\"token keyword\\\">default</span> <span class=\\\"token function\\\">translate</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">\\\"LanguageSwitcher\\\"</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">(</span>LanguageSwitcher<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n</code></pre>\\n      </div>\\n<p>This is a pretty simple component. We‚Äôre setting the <code>language</code> state based on\\nthe i18n prop so that we can check which language is currently active and show\\nthat in our menu.</p>\\n<p>The <code>handleLanguageChange</code> function just wraps the <code>react-i18n</code> function passed\\nin as a prop through <code>translate</code>. Pretty much everything is handled for us.\\nHooray! üéâ</p>\\n<h2 id=\\\"finishing-up\\\"><a href=\\\"#finishing-up\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>Finishing up</h2>\\n<p>As you can see, i18n in Gatsby is actually pretty simple when you know how! We\\nhad to work a few things out for ourselves (the locales folder being one of\\nthem!), so hopefully reading this will allow you to get started serving\\ninternational users even quicker.</p>\",\"excerpt\":\"Languages are a key part of who we are; they are an expression of our identity.\\nServing users content in their own language is a powerful‚Ä¶\",\"timeToRead\":7,\"fields\":{\"slug\":\"/blog/2017-10-17-building-i18n-with-gatsby/\"},\"frontmatter\":{\"excerpt\":null,\"image\":null,\"date\":\"October 17th 2017\",\"rawDate\":\"2017-10-17T00:00:00.000Z\",\"canonicalLink\":null,\"publishedAt\":null,\"title\":\"Building i18n with Gatsby\",\"imageAuthor\":null,\"imageAuthorLink\":null,\"imageTitle\":null,\"showImageInArticle\":null,\"author\":{\"id\":\"Samuel Goudie\",\"bio\":\"Cofounder & Head of Product at https://doopoll.co\",\"twitter\":\"@sgoudie\",\"avatar\":{\"childImageSharp\":{\"resolutions\":{\"tracedSVG\":\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='63' height='63' viewBox='0 0 63 63'%3E%3Crect width='100%25' height='100%25' fill='%23f6f2f8'/%3E%3Cpath d='M24 8c-2.6 1.2-5 3.1-5.7 4.6-1.3 2.9-.6 16 1 17 .4.4.7-.2.6-1.2-.3-2.3 2-10.4 3.3-12.1 1.2-1.5 11.5-1.7 15.2-.3 2.6 1 4.5 5.7 4.7 11.5 0 2.8 0 2.9 1 .8 1.4-2.7-1.4-18-3.6-20.2-2.2-2.3-11.3-2.3-16.5 0m1.5 18c-.4.5-1 .7-1.6.4-.5-.4-.9-.2-.9.3 0 1.3 2.7 2.3 4.5 1.6.8-.4 1.5-1.2 1.5-2 0-1.6-2.6-1.9-3.5-.4m9 .1c-.7 1 1 2.9 2.5 2.9.3 0 1.1-.4 1.9-.9 1.7-1.1.5-3.1-1.9-3.1-1 0-2.2.5-2.6 1.1m-9.4 9a8.4 8.4 0 0 0-.5 4.9c.5 2.5 1 2.8 3.7 2.5 1.7-.3 3.3-.7 3.6-1 .2-.2 1.3 0 2.3.5 1.2.7 2 .7 2.4 0 .4-.6 1-.8 1.5-.5.4.3 1-1 1.2-2.9.3-2.5-.1-3.7-1.4-4.5-1.1-.7-1.8-.7-1.8-.1 0 .5-.5 1-1 1-.6 0-.8-.5-.4-1 .8-1.5-4.8-1-5.8.5-1.4 2-.8 2.4 2.4 2 1.8-.3 2.7-.2 2 .1-1.2.5-1.2.8 0 1.5.9.6.3.9-2 .9-3.2 0-5.4-2.3-4.5-4.8.7-2-.5-1.4-1.7.9m15.4 8.2c-.3 1-1.2 1.7-2 1.7-.7 0-1.5.9-1.9 2-.9 2.8-8.2 2.4-11.2-.7-1.9-2-3.2-2.3-8.6-2.3h-6.4l-.8 5.3C9 52 8.7 54.8 8.8 55c0 .3-1.1 1.2-2.6 2C2.8 58.8 0 61 0 62c0 .5 6.6.9 14.7.9 14.5 0 14.6 0 12.8-2-1-1.1-1.3-2-.7-2 1.5 0 1.6-3.6.2-4.5a2 2 0 0 1-1-1.7c0-.6 1-.3 2.4.6 2.4 1.5 2.7 1.4 7-1.8l4.4-3.4 1 2.4c1.5 3.1 1.5 4.4.1 2.4-.8-1.2-.9-1-.4 1s.4 2.2-.4 1c-.6-.8-1.1-1-1.2-.5l-.3 2.3c0 .7-.7 1.7-1.5 2.1-.8.5-1.1 1.6-.8 2.5.7 1.8 26 2.5 27.1.7 1.3-2-.8-4-6-6.1C54 54.6 52 53.2 52 52c0-1.3-.2-1.3-.9-.3-1.6 2.6-4.5.7-7.3-4.8-2-4.1-2.9-5-3.4-3.7M11 48.5c0 2 .4 3.5 1 3.5l2.4.6c1 .4 1.5.2 1.3-.7-.2-.8-.2-1.1 0-.7.5.8 5.3-4 5.3-5.2 0-.6-2.3-1-5-1h-5v3.5' fill='%23e0d6eb' fill-rule='evenodd'/%3E%3C/svg%3E\",\"width\":63,\"height\":63,\"src\":\"/gatsby_cn/static/samuel-goudie-dc6e5869628527325f591d179bce7bc7-4a2e8.jpg\",\"srcSet\":\"/gatsby_cn/static/samuel-goudie-dc6e5869628527325f591d179bce7bc7-4a2e8.jpg 1x,\\n/gatsby_cn/static/samuel-goudie-dc6e5869628527325f591d179bce7bc7-53944.jpg 1.5x,\\n/gatsby_cn/static/samuel-goudie-dc6e5869628527325f591d179bce7bc7-bd4ff.jpg 2x,\\n/gatsby_cn/static/samuel-goudie-dc6e5869628527325f591d179bce7bc7-6257f.jpg 3x\"}}},\"fields\":{\"slug\":\"/contributors/samuel-goudie/\"}}}}},\"pathContext\":{\"slug\":\"/blog/2017-10-17-building-i18n-with-gatsby/\",\"prev\":{\"fields\":{\"slug\":\"/blog/2017-10-16-making-website-building-fun/\",\"package\":null},\"frontmatter\":{\"title\":\"Making website building fun\",\"draft\":null,\"canonicalLink\":null,\"publishedAt\":null}},\"next\":{\"fields\":{\"slug\":\"/blog/2017-10-20-from-wordpress-to-developing-in-react-starting-to-see-it/\",\"package\":null},\"frontmatter\":{\"title\":\"From WordPress to Developing in React ‚Äî Starting to See It\",\"draft\":null,\"canonicalLink\":null,\"publishedAt\":null}}}}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/json-loader!./.cache/json/blog-2017-10-17-building-i-18-n-with-gatsby.json\n// module id = 605\n// module chunks = 201564949894374"],"sourceRoot":""}