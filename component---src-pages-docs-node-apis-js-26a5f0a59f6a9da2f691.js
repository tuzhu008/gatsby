webpackJsonp([0x6d7ea9bc269a],{254:function(e,t,n){(function(e){"use strict";function r(e){return e&&e.__esModule?e:{default:e}}function o(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function a(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}function l(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}t.__esModule=!0,t.pageQuery=void 0;var s=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e},c=n(3),u=r(c),i=n(72),p=r(i),m=n(5),f=n(8),y=r(f),h=function(t){function n(){return o(this,n),a(this,t.apply(this,arguments))}return l(n,t),n.prototype.render=function(){return e.createElement(y.default,null,e.createElement("h1",{css:{marginTop:0}},"Gatsby Node APIs"),e.createElement("p",null,"Gatsby gives plugins and site builders many APIs for controlling your site."),e.createElement("h3",null,"Async plugins"),e.createElement("p",null,"If your plugin performs async operations (disk I/O, database access, calling remote APIs, etc.) you must either return a promise or use the callback passed to the 3rd argument. Gatsby needs to know when plugins are finished as some APIs, to work correctly, require previous APIs to be complete first."),e.createElement("pre",null,e.createElement("code",{className:"language-javascript",dangerouslySetInnerHTML:{__html:"// Promise API\nexports.createPages = () => {\n  return new Promise((resolve, reject) => {\n    // do async work\n  })\n}\n\n// Callback API\nexports.createPages = (_, pluginOptions, cb) => {\n  // do Async work\n  cb()\n}"}})),e.createElement("p",null,"If your plugin doesn't do async work, you can just return directly."),e.createElement("hr",null),e.createElement("h2",{css:{marginBottom:(0,m.rhythm)(.5)}},"Usage"),e.createElement("p",{css:{marginBottom:(0,m.rhythm)(1)}},"Implement any of these APIs by exporting them from a file named"," ",e.createElement("code",null,"gatsby-node.js")," in the root of your project."),e.createElement("hr",null),e.createElement("h2",{css:{marginBottom:(0,m.rhythm)(.5)}},"APIs"),e.createElement("ul",{css:s({},(0,m.scale)(-.2))},this.props.data.allDocumentationJs.edges.map(function(t,n){var r=t.node;return e.createElement("li",{key:"function list "+r.name},e.createElement("a",{href:"#"+r.name},r.name))})),e.createElement("br",null),e.createElement("hr",null),e.createElement("h2",null,"Reference"),e.createElement(p.default,{functions:this.props.data.allDocumentationJs.edges}))},n}(u.default.Component);t.default=h;t.pageQuery="** extracted graphql fragment **"}).call(t,n(4))}});
//# sourceMappingURL=component---src-pages-docs-node-apis-js-26a5f0a59f6a9da2f691.js.map