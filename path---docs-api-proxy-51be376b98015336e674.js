webpackJsonp([0xb31de9dd9981],{643:function(e,n){e.exports={data:{markdownRemark:{html:'<p>People often serve the front-end React app from the same host and port as their\nbackend implementation.</p>\n<p>To tell the development server to proxy any unknown requests to your API server\nin development, add a <code>proxy</code> field to your <code>gatsby-config.js</code>, for example:</p>\n<div class="gatsby-highlight">\n      <pre class="language-js"><code>module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>\n  proxy<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n    prefix<span class="token punctuation">:</span> <span class="token string">"/api"</span><span class="token punctuation">,</span>\n    url<span class="token punctuation">:</span> <span class="token string">"http://dev-mysite.com/api/"</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span>\n</code></pre>\n      </div>\n<p>This way, when you <code>fetch(\'/api/todos\')</code> in development, the development server\nwill recognize that it’s not a static asset, and will proxy your request to\n<code>http://dev-mysite.com/api/todos</code> as a fallback.</p>\n<p>Keep in mind that <code>proxy</code> only has effect in development (with <code>gatsby develop</code>), and it is up to you to ensure that URLs like <code>/api/todos</code> point to\nthe right place in production.</p>',excerpt:"People often serve the front-end React app from the same host and port as their\nbackend implementation. To tell the development server to…",timeToRead:1,frontmatter:{title:"Proxying API Requests in Development"},parent:{__typename:"File",relativePath:"docs/api-proxy.md"}}},pathContext:{slug:"/docs/api-proxy/"}}}});
//# sourceMappingURL=path---docs-api-proxy-51be376b98015336e674.js.map